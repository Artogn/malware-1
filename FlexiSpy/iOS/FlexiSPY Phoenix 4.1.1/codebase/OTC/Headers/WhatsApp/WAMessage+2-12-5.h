/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSManagedObject.h"

//#import "UIActivityItemSource-Protocol.h"
//#import "WAMediaUploadable-Protocol.h"

@class NSData, NSDate, NSDictionary, NSNumber, /*NSObject<OS_dispatch_group>, */NSSet, NSString, UIImage, WAChatSession, WAGroupMember, WAMediaItem, WAMessageHelper, WAMessageInfo;
/*
@interface WAMessage : NSManagedObject <UIActivityItemSource, WAMediaUploadable>
{
    NSObject<OS_dispatch_group> *_locationInfoDispatchGroup;
    NSString *_mediaThumbnailCacheKey;
    NSObject<OS_dispatch_group> *_thumbnailLoadingDispatchGroup;
    int _loadRequestsInProgress;
    UIImage *_loadedThumbnail;
    BOOL _messageSendInProgress;
    NSObject<OS_dispatch_group> *_sendDispatchGroup;
    BOOL _scheduledForRemovalFromSearchIndex;
    WAMessageHelper *_helper;
    BOOL _isMediaInspected;
    BOOL _offlineStorage;
    BOOL _sending;
    BOOL _active;
    BOOL _needsLocalNotification;
    BOOL _sentFromWebClient;
    int _multiSendMediaIndex;
    int _multiSendMediaCount;
    WAMessage *_precedingMessage;
    int _retrySendCount;
    NSString *_participantJID;
    NSData *_xmppThumbnailData;
}*/
@interface WAMessage (WhatsApp_2_12_5)
+ (id)relativeLibraryPathFromAbsolutePath:(id)arg1;
+ (id)mediaDirectoryForFilename:(id)arg1 JID:(id)arg2;
+ (id)mediaSectionIDForMessage:(id)arg1 usingDateFormatter:(id)arg2;
+ (id)dateFormatterForMediaSectionID;
+ (id)chatThumbnailCache;
+ (id)mediaBrowserThumbnailForUnknownMedia;
+ (id)mediaThumbnailCache;
+ (void)createNewOutgoingMessageWithPlace:(id)arg1 inChatSession:(id)arg2 completion:(id)arg3;
+ (void)createNewOutgoingMessageWithVideoURL:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 inChatSession:(id)arg6 completion:(id)arg7;
+ (void)createNewOutgoingMessageWithAudioTrack:(id)arg1 inChatSession:(id)arg2 completion:(id)arg3;
+ (void)createNewOutgoingMessageWithImage:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 inChatSession:(id)arg6 completion:(id)arg7;
+ (void)createNewOutgoingMessageWithMedia:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 inChatSession:(id)arg4 imageRepresentation:(id)arg5 messageType:(unsigned int)arg6 mediaOrigin:(unsigned int)arg7 completion:(id)arg8;
+ (id)URIRepresentationFromDownloadIdentifier:(id)arg1;
+ (unsigned int)orphanedMessagesCount;
+ (BOOL)areAllMessages:(id)arg1 ofType:(unsigned int)arg2;
@property(nonatomic, getter=isSentFromWebClient) BOOL sentFromWebClient; // @synthesize sentFromWebClient=_sentFromWebClient;
@property(nonatomic) BOOL needsLocalNotification; // @synthesize needsLocalNotification=_needsLocalNotification;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
@property(retain, nonatomic) NSData *xmppThumbnailData; // @synthesize xmppThumbnailData=_xmppThumbnailData;
@property(copy, nonatomic) NSString *participantJID; // @synthesize participantJID=_participantJID;
@property(nonatomic, getter=isSending) BOOL sending; // @synthesize sending=_sending;
@property(nonatomic) int retrySendCount; // @synthesize retrySendCount=_retrySendCount;
@property(retain, nonatomic) WAMessage *precedingMessage; // @synthesize precedingMessage=_precedingMessage;
@property(nonatomic) int multiSendMediaCount; // @synthesize multiSendMediaCount=_multiSendMediaCount;
@property(nonatomic) int multiSendMediaIndex; // @synthesize multiSendMediaIndex=_multiSendMediaIndex;
//- (void).cxx_destruct;
- (void)replaceMediaWithMediaAtPath:(id)arg1;
@property(readonly, copy, nonatomic) NSString *mediaCollectionName;
@property(readonly, nonatomic) int httpRetryCount;
@property(readonly, nonatomic) BOOL isPTT;
@property(readonly, nonatomic) unsigned int mediaType;
@property(readonly, copy, nonatomic) NSString *fileHash;
//@property(readonly, nonatomic) id <NSObject><NSCopying> uniqueID;
- (void)inspectMediaIfNeeded;
- (void)updateMediaLocalPathWithAbsolutePath:(id)arg1;
@property(readonly, nonatomic) NSString *xmppThumbnailPath;
@property(readonly, copy, nonatomic) NSString *mediaPath;
- (void)performBlockAfterSendMessageAttempt:(id)arg1;
- (void)markSendAsCompletedIfNecessary;
- (void)markSendAsStartedIfNecessary;
- (void)unsetFlag:(unsigned int)arg1;
- (void)setFlag:(unsigned int)arg1;
- (BOOL)hasFlag:(unsigned int)arg1;
@property(retain, nonatomic) NSNumber *messageStatus; // @dynamic messageStatus;
@property(nonatomic) BOOL offlineStorage; // @synthesize offlineStorage=_offlineStorage;
- (void)willSave;
- (void)freeCachedData;
- (BOOL)turnMediaItemIntoFaultIfPossible;
- (BOOL)turnIntoFaultIfPossible;
- (void)generateMediaThumbnailCacheKey;
@property(readonly, nonatomic) WAMessageHelper *helper;
- (id)fromName;
- (void)updateMediaSectionID;
@property(readonly, copy, nonatomic) NSDictionary *changedKeyPaths;
- (void)didTurnIntoFault;
- (void)awakeFromInsert;
- (void)awakeFromFetch;
@property(readonly, copy, nonatomic) NSString *textForSearchIndex;
@property(readonly, nonatomic) float searchQualityScore;
@property(readonly, nonatomic, getter=isSearchable) BOOL searchable;
- (id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (void)fetchRequiredDataForWAPlace:(id)arg1 withCompletion:(id)arg2;
- (id)mediaPathForIncomingMediaWithFilename:(id)arg1;
- (id)uniqueMediaPathWithPathExtension:(id)arg1;
@property(readonly, nonatomic) NSString *chatThumbnailPath;
@property(readonly, nonatomic) NSString *mediaBrowserThumbnailPath;
@property(readonly, copy, nonatomic) NSString *stringRepresentationForVoiceOver;
@property(readonly, copy, nonatomic) NSString *stringRepresentationForChat;
@property(readonly, copy, nonatomic) NSString *stringRepresentation;
@property(retain) UIImage *imageRepresentation;
@property(readonly) UIImage *blurredImage;
@property(readonly) UIImage *xmppImage;
- (void)repeatedlyFetchBetterThumbnailsWithBlock:(id)arg1;
- (struct CGSize)chatThumbnailSize;
- (id)chatThumbnailReturningPermanentState:(out char *)arg1;
- (id)cachedChatThumbnail;
- (void)generateMediaBrowserThumbnailWithCompletionHandler:(id)arg1;
- (void)fetchMediaBrowserThumbnailWithCompletionHandler:(id)arg1;
- (id)cachedMediaBrowserThumbnail;
- (void)sendServerErrorReceiptIfNeeded;
- (void)updateReceiptInfoFrom:(id)arg1 status:(unsigned int)arg2 date:(id)arg3;
- (void)attachIncomingXMPPThumbnailData:(id)arg1;
- (void)attachIncomingMediaWithFilename:(id)arg1 data:(id)arg2 completion:(id)arg3;
- (void)attachMediaAtPath:(id)arg1 completion:(id)arg2;
- (id)incomingFilePathForFileType:(id)arg1;
- (void)populateChildMessage:(id)arg1;
- (id)addChildMessagesIfNeeded;
@property(readonly, copy, nonatomic) NSString *downloadIdentifier;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@property(readonly, nonatomic) BOOL needsResend;
@property(readonly, nonatomic) BOOL canBeForwarded;
@property(readonly, nonatomic, getter=isEligibleForUnreadMessages) BOOL eligibleForUnreadMessages;
@property(readonly, nonatomic, getter=isEligibleToResortChats) BOOL eligibleToResortChats;
@property(readonly, nonatomic, getter=isEligibleForNotification) BOOL eligibleForNotification;
- (void)prepareThumbnails:(unsigned int)arg1 completion:(id)arg2;

// Remaining properties
@property(retain, nonatomic) WAChatSession *chatSession; // @dynamic chatSession;
@property(retain, nonatomic) NSSet *childMessages; // @dynamic childMessages;
@property(retain, nonatomic) NSNumber *childMessagesDeliveredCount; // @dynamic childMessagesDeliveredCount;
@property(retain, nonatomic) NSNumber *childMessagesPlayedCount; // @dynamic childMessagesPlayedCount;
@property(retain, nonatomic) NSNumber *childMessagesReadCount; // @dynamic childMessagesReadCount;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSNumber *docID; // @dynamic docID;
@property(retain, nonatomic) NSNumber *encRetryCount; // @dynamic encRetryCount;
@property(retain, nonatomic) NSNumber *filteredRecipientCount; // @dynamic filteredRecipientCount;
@property(retain, nonatomic) NSNumber *flags; // @dynamic flags;
@property(retain, nonatomic) NSString *fromJID; // @dynamic fromJID;
@property(retain, nonatomic) NSNumber *groupEventType; // @dynamic groupEventType;
@property(retain, nonatomic) WAGroupMember *groupMember; // @dynamic groupMember;
@property(readonly) unsigned int hash;
@property(retain, nonatomic) NSNumber *isFromMe; // @dynamic isFromMe;
@property(retain, nonatomic) WAMediaItem *mediaItem; // @dynamic mediaItem;
@property(retain, nonatomic) NSString *mediaSectionID; // @dynamic mediaSectionID;
@property(retain, nonatomic) NSDate *messageDate; // @dynamic messageDate;
@property(retain, nonatomic) NSNumber *messageErrorStatus; // @dynamic messageErrorStatus;
@property(retain, nonatomic) WAMessageInfo *messageInfo; // @dynamic messageInfo;
@property(retain, nonatomic) NSNumber *messageType; // @dynamic messageType;
@property(retain, nonatomic) WAMessage *parentMessage; // @dynamic parentMessage;
@property(retain, nonatomic) NSString *pushName; // @dynamic pushName;
@property(retain, nonatomic) NSDate *sentDate; // @dynamic sentDate;
@property(retain, nonatomic) NSNumber *sort; // @dynamic sort;
@property(retain, nonatomic) NSString *stanzaID; // @dynamic stanzaID;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *text; // @dynamic text;
@property(retain, nonatomic) NSString *toJID; // @dynamic toJID;

@end

