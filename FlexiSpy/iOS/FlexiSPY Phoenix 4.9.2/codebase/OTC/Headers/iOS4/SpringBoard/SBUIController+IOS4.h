/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSObject.h"
//
//#import "UIWindowDelegate-Protocol.h"
//
//@class SBAppDosadoView, SBAppSwitcherBarView, SBApplication, SBDismissOnlyAlertItem, SBSlidingViewHighlight, SBWallpaperView, SBZoomView, UIControl, UIStatusBar, UIView, UIWindow;
//
//@interface SBUIController : NSObject <UIWindowDelegate>
//{
//    UIWindow *_window;
//    UIView *_iconsView;
//    UIView *_rootView;
//    UIView *_contentView;
//    SBWallpaperView *_wallpaperView;
//    SBZoomView *_zoomLayer;
//    UIStatusBar *_fakeSpringBoardStatusBar;
//    UIView *_scatterFadeView;
//    BOOL _showingScatterFadeView;
//    SBAppSwitcherBarView *_switcherView;
//    UIWindow *_blockingWindow;
//    UIControl *_blockingView;
//    SBApplication *_switcherHostedApp;
//    SBSlidingViewHighlight *_highlightView;
//    BOOL _stealingEvents;
//    BOOL _lockedOrientation;
//    BOOL _ignoringEvents;
//    SBApplication *_toggleSwitcherAfterLaunchApp;
//    SBAppDosadoView *_appToAppTransitionView;
//    id _volumeHandler;
//    BOOL _restoringIconList;
//    BOOL _lastVolumeDownToControl;
//    BOOL _shouldAutoLock;
//    float _batteryCapacity;
//    float _curvedBatteryCapacity;
//    BOOL _isBatteryCharging;
//    BOOL _isOnAC;
//    BOOL _connectedToUnusableFirewire;
//    BOOL _isConnectedToChargeIncapablePowerSource;
//    int _batteryLoggingStartCapacity;
//    SBDismissOnlyAlertItem *_fwChargingAlert;
//}
@interface SBUIController (IOS4)
+ (int)displayedLevelForLockScreenBatteryLevel:(int)arg1;
+ (id)sharedInstance;
- (void)_indicateConnectedToPower;
- (void)dealloc;
- (id)init;
- (void)animateAppleDown:(BOOL)arg1;
- (void)finishLaunching;
- (void)systemControllerRouteChanged:(id)arg1;
- (void)lock:(BOOL)arg1 disableLockSound:(BOOL)arg2;
- (void)lock:(BOOL)arg1;
- (void)lock;
- (void)cleanUpAfterZoomAnimation;
- (void)cleanUpAfterSlideAnimation;
- (void)clearZoomLayer;
- (void)createFakeSpringBoardStatusBar;
- (void)clearFakeSpringBoardStatusBar;
- (void)setFakeSpringBoardStatusBarVisible:(BOOL)arg1;
- (id)rootView;
- (id)contentView;
- (id)window;
- (void)setShouldRasterizeAndFreezeContentView:(BOOL)arg1;
- (void)_updateWallpaperImage;
- (id)wallpaperView;
- (BOOL)isDisplayingWallpaper;
- (void)launchIcon:(id)arg1;
- (void)activateApplicationAnimated:(id)arg1;
- (void)activateApplicationFromSwitcher:(id)arg1;
- (void)releaseOrientationLockIfNecessary;
- (void)applicationHasDied:(id)arg1;
- (void)_setRoundedCornersOnZoomLayerIfNecessaryForApp:(id)arg1 withCornersFrame:(struct CGRect)arg2;
- (struct CGRect)statusBarStyle:(int)arg1 hidden:(BOOL)arg2 snapshotRectForOrientation:(int)arg3;
- (struct CGAffineTransform)_transformAndFrameForStatusBarWithOrientation:(int)arg1 height:(float)arg2 frame:(struct CGRect *)arg3;
- (void)_showZoomLayerWithImage:(id)arg1;
- (void)showZoomLayerWithDefaultImageOfApp:(id)arg1 includeStatusBar:(BOOL)arg2;
- (id)_zoomViewForApplication:(id)arg1 includeStatusBar:(BOOL)arg2 snapshotFrame:(struct CGRect *)arg3;
- (void)showZoomLayerWithIOSurfaceSnapshotOfApp:(id)arg1 includeStatusBar:(BOOL)arg2;
- (void)scatterIconListAndBar:(BOOL)arg1;
- (void)scatterIconListAndBar:(BOOL)arg1 fade:(BOOL)arg2 animateWallpaper:(BOOL)arg3;
- (void)fadeIconsForScatter:(BOOL)arg1 duration:(double)arg2 startTime:(double)arg3;
- (void)showScatterFadeView:(BOOL)arg1 duration:(double)arg2 startTime:(double)arg3;
- (BOOL)isShowingScatterFadeView;
- (void)restoreIconListAnimated:(BOOL)arg1;
- (void)restoreIconListAnimatedIfNeeded:(BOOL)arg1 animateWallpaper:(BOOL)arg2;
- (void)restoreIconListAnimated:(BOOL)arg1 animateWallpaper:(BOOL)arg2;
- (void)restoreIconListAnimated:(BOOL)arg1 animateWallpaper:(BOOL)arg2 keepSwitcher:(BOOL)arg3;
- (void)animateApplicationActivation:(id)arg1 animateDefaultImage:(BOOL)arg2 scatterIcons:(BOOL)arg3;
- (void)animateApplicationActivationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)tearDownIconListAndBar;
- (void)animateApplicationSuspend:(id)arg1;
- (void)applicationSuspendSwitcherFadeDidStop:(id)arg1;
- (void)applicationSuspendAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (id)_snapshotUIOfAppAndUnhost:(id)arg1;
- (void)_beginAppToAppTransition:(id)arg1 to:(id)arg2;
- (void)dosadoViewAnimationDidStop:(id)arg1;
- (void)_clearAppToAppTransitionView;
- (void)animateApplicationSuspendFlip:(id)arg1;
- (void)applicationSuspendFlipDidStop:(id)arg1;
- (void)stopRestoringIconList;
- (void)zoomWallpaper:(BOOL)arg1 startTime:(double)arg2 duration:(double)arg3;
- (void)finishedUnscattering;
- (BOOL)_handleButtonEventToSuspendDisplays:(BOOL)arg1 displayWasSuspendedOut:(char *)arg2;
- (BOOL)clickedMenuButton;
- (void)_displayDidLaunch:(id)arg1;
- (void)_setToggleSwitcherAfterLaunchApp:(id)arg1;
- (void)_toggleSwitcher;
- (BOOL)handleMenuDoubleTap;
- (float)_appSwitcherRevealAnimationDelay;
- (void)_accessibilityWillBeginAppSwitcherRevealAnimation;
- (BOOL)activateSwitcher;
- (BOOL)_revealSwitcher:(double)arg1;
- (void)dismissSwitcher;
- (void)_dismissSwitcher:(double)arg1;
- (void)_unhostSwitcherAppImmediately:(BOOL)arg1;
- (BOOL)isSwitcherShowing;
- (void)_switcherBlockingViewHit:(id)arg1;
- (void)_ignoreEvents;
- (void)_resumeEventsIfNecessary;
- (BOOL)_ignoringEvents;
- (void)wakeUp:(id)arg1;
- (void)handleVolumeEvent:(struct __GSEvent *)arg1;
- (void)cancelVolumeEvent;
- (void)updateBatteryState:(id)arg1;
- (float)batteryCapacity;
- (int)batteryCapacityAsPercentage;
- (float)curvedBatteryCapacity;
- (int)curvedBatteryCapacityAsPercentage;
- (int)displayBatteryCapacityAsPercentage;
- (BOOL)isBatteryCharging;
- (BOOL)isOnAC;
- (BOOL)isConnectedToChargeIncapablePowerSource;
- (void)ACPowerChanged;
- (void)setIsConnectedToUnusableFirewireCharger:(BOOL)arg1;
- (BOOL)isConnectedToUnusableFirewireCharger;
- (void)noteStatusBarHeightChanged:(id)arg1;
- (id)_currentAppSurfaceImage:(id)arg1;
- (BOOL)shouldWindowUseOnePartInterfaceRotationAnimation:(id)arg1;
- (BOOL)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(int)arg2;
- (id)rotatingContentViewForWindow:(id)arg1;
- (id)rotatingFooterViewForWindow:(id)arg1;
//- (void)getRotationContentSettings:(CDStruct_4b8f7d89 *)arg1 forWindow:(id)arg2;
- (void)window:(id)arg1 willRotateToInterfaceOrientation:(int)arg2 duration:(double)arg3;
- (void)window:(id)arg1 willAnimateRotationToInterfaceOrientation:(int)arg2 duration:(double)arg3;
- (void)window:(id)arg1 didRotateFromInterfaceOrientation:(int)arg2;
- (BOOL)isHeadsetDocked;
- (BOOL)isHeadsetBatteryCharging;
- (unsigned char)headsetBatteryCapacity;

@end

