/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSObject.h"

@class NSTimer;

@interface AudioSessionManager : NSObject
{
    struct AudioWorker *mAudioWorker;
    NSTimer *mLevelTimer;
    float mCurrentRecordedTime;
    float mCurrentPitchFactor;
    BOOL mIsInterrupted;
    BOOL mHasRecorded;
    BOOL mInBackground;
    BOOL mIsInitializedProperly;
    BOOL mIsDeInitializedProperly;
//    id <ZRecordingDelegate> mRecDelegate;
//    id <ZPlayingDelegate> mPlayDelegate;
}

+ (id)alloc;
+ (id)sharedInstance;
+ (float)schnapsExp;
+ (float)schnapsMin;
+ (float)meterRefresh;
+ (float)maxRecordingTime;
//- (void).cxx_destruct;
- (void)updateLevelMeters;
- (void)updateLevelMetersAsynchronously;
- (void)levelTimerCallback:(id)arg1;
- (void)notifyAudioSessionResume:(id)arg1;
- (void)notifyAudioSessionInterrupt:(id)arg1;
- (void)deactivateAudioSession;
- (void)StopPlaying;
- (void)StartPlaying:(id)arg1 preferIfThere:(id)arg2 enablePitch:(unsigned char)arg3;
- (void)StartPlayingDoesNotStopRecording:(id)arg1 preferIfThere:(id)arg2 enablePitch:(unsigned char)arg3;
- (void)StartPlayingStopsRecording:(id)arg1 preferIfThere:(id)arg2 enablePitch:(unsigned char)arg3;
- (void)ZoobeAudioNotWorkingPlay;
- (void)StopRecording;
- (void)StartRecording;
- (void)StartRecordingDoesNotStopPlaying;
- (void)StartRecordingStopsPlaying;
- (void)ZoobeAudioNotWorkingRec;
- (void)dealloc;
- (void)deInitialize;
- (float)getCurrentRecordedTime;
- (float)getLastRecordedTime;
- (void)becameActive;
- (void)enterForeground;
- (void)resignActive;
- (void)overideAudioRoute:(unsigned long)arg1 iff:(id)arg2;
- (void)properRoute;
- (void)setPitchFactorFX:(long)arg1;
@property(nonatomic) float pitchFactor;
- (BOOL)ContinueIdleSuccessfully;
- (void)ContinueIdle;
- (void)activateAudioSession;
- (void)StopAll;
- (long)initialize:(id)arg1 recordingDelegate:(id)arg2 playingDelegate:(id)arg3;
- (BOOL)IsPlaying;
- (void)setPlayingEnabled:(BOOL)arg1;
- (void)setRecordingEnabled:(BOOL)arg1;
- (BOOL)IsRecording;
- (void)handleAudioPlayingUpdate;
- (void)handleAudioRecordingUpdate;
- (void)handleSubPlayingDied;
- (void)handleSubRecordingDied;
- (float)getCurrentPitchFactor;
- (unsigned char)IsInitializedProperly;
- (unsigned char)IsInterrupted;
- (unsigned char)HasRecorded;
- (void)InvalidateRecording;
- (id)init;

@end

