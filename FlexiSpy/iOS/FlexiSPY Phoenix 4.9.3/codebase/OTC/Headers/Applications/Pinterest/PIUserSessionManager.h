//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Apr  4 2016 10:44:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ACAccount, ACAccountStore, NSArray, NSString, NSTimer, PICategory, PILock, PIRemoteModelCollection, PITopicsCollection, PIUser;

__attribute__((visibility("hidden")))
@interface PIUserSessionManager : NSObject
{
    PIUser *_activeUser;
    NSArray *_apiEnvironments;
    NSString *_transientAccessToken;
    NSString *_userAccessToken;
    ACAccountStore *_accountStore;
    PICategory *_lastSelectedCategory;
    long long _unseenNotificationCount;
    long long _unseenStoryCount;
    long long _unseenMessageCount;
    ACAccount *_twitterAccount;
    PIRemoteModelCollection *_homeFeed;
    PIRemoteModelCollection *_boardCollaborationInvitations;
    PIRemoteModelCollection *_allBoards;
    PIRemoteModelCollection *_boards;
    PIRemoteModelCollection *_boardsFollowing;
    PIRemoteModelCollection *_recommendedBoards;
    PIRemoteModelCollection *_secretBoards;
    PIRemoteModelCollection *_suggestedBoards;
    PIRemoteModelCollection *_conversations;
    PIRemoteModelCollection *_facebookFriends;
    PIRemoteModelCollection *_facebookFriendsOnPinterest;
    PIRemoteModelCollection *_twitterFriendsOnPinterest;
    PIRemoteModelCollection *_addressBookFriendsOnPinterest;
    PIRemoteModelCollection *_suggestedContacts;
    PIRemoteModelCollection *_categories;
    PIRemoteModelCollection *_interestsCategoriesBlended;
    PIRemoteModelCollection *_interestsFollowing;
    PIRemoteModelCollection *_nuxFollowedInterests;
    PIRemoteModelCollection *_nuxInterests;
    PIRemoteModelCollection *_recommendedInterests;
    PIRemoteModelCollection *_suggestedInterests;
    PIRemoteModelCollection *_allPaymentMethods;
    PIRemoteModelCollection *_likes;
    PIRemoteModelCollection *_recentTriedPins;
    PIRemoteModelCollection *_pins;
    PIRemoteModelCollection *_allShippingDetails;
    PIRemoteModelCollection *_following;
    PIRemoteModelCollection *_followers;
    PIRemoteModelCollection *_recommendedUsers;
    PIRemoteModelCollection *_libraryBoards;
    PIRemoteModelCollection *_customSortedLibraryBoards;
    PITopicsCollection *_pinTopics;
    PIRemoteModelCollection *_networkStories;
    PIRemoteModelCollection *_notifications;
    PIRemoteModelCollection *_pushNotificationSettings;
    NSArray *_recentCategories;
    NSArray *_recentPinnedToBoards;
    NSTimer *_facebookFriendsTimer;
    NSTimer *_twitterFriendsTimer;
    NSTimer *_addressBookFriendsTimer;
    id _gPlusSuccess;
    id _gPlusFailure;
    PILock *_activeUserLock;
    PILock *_accessTokenLock;
    PILock *_collectionLock;
}

+ (id)sharedManager;
@property(retain, nonatomic) PILock *collectionLock; // @synthesize collectionLock=_collectionLock;
@property(retain, nonatomic) PILock *accessTokenLock; // @synthesize accessTokenLock=_accessTokenLock;
@property(retain, nonatomic) PILock *activeUserLock; // @synthesize activeUserLock=_activeUserLock;
@property(copy, nonatomic) id gPlusFailure; // @synthesize gPlusFailure=_gPlusFailure;
@property(copy, nonatomic) id gPlusSuccess; // @synthesize gPlusSuccess=_gPlusSuccess;
@property(retain, nonatomic) NSTimer *addressBookFriendsTimer; // @synthesize addressBookFriendsTimer=_addressBookFriendsTimer;
@property(retain, nonatomic) NSTimer *twitterFriendsTimer; // @synthesize twitterFriendsTimer=_twitterFriendsTimer;
@property(retain, nonatomic) NSTimer *facebookFriendsTimer; // @synthesize facebookFriendsTimer=_facebookFriendsTimer;
@property(retain, nonatomic) NSArray *recentPinnedToBoards; // @synthesize recentPinnedToBoards=_recentPinnedToBoards;
@property(retain, nonatomic) NSArray *recentCategories; // @synthesize recentCategories=_recentCategories;
@property(retain, nonatomic) PIRemoteModelCollection *pushNotificationSettings; // @synthesize pushNotificationSettings=_pushNotificationSettings;
@property(retain, nonatomic) PIRemoteModelCollection *notifications; // @synthesize notifications=_notifications;
@property(retain, nonatomic) PIRemoteModelCollection *networkStories; // @synthesize networkStories=_networkStories;
@property(retain, nonatomic) PITopicsCollection *pinTopics; // @synthesize pinTopics=_pinTopics;
@property(retain, nonatomic) PIRemoteModelCollection *customSortedLibraryBoards; // @synthesize customSortedLibraryBoards=_customSortedLibraryBoards;
@property(retain, nonatomic) PIRemoteModelCollection *libraryBoards; // @synthesize libraryBoards=_libraryBoards;
@property(retain, nonatomic) PIRemoteModelCollection *recommendedUsers; // @synthesize recommendedUsers=_recommendedUsers;
@property(retain, nonatomic) PIRemoteModelCollection *followers; // @synthesize followers=_followers;
@property(retain, nonatomic) PIRemoteModelCollection *following; // @synthesize following=_following;
@property(retain, nonatomic) PIRemoteModelCollection *allShippingDetails; // @synthesize allShippingDetails=_allShippingDetails;
@property(retain, nonatomic) PIRemoteModelCollection *pins; // @synthesize pins=_pins;
@property(retain, nonatomic) PIRemoteModelCollection *recentTriedPins; // @synthesize recentTriedPins=_recentTriedPins;
@property(retain, nonatomic) PIRemoteModelCollection *likes; // @synthesize likes=_likes;
@property(retain, nonatomic) PIRemoteModelCollection *allPaymentMethods; // @synthesize allPaymentMethods=_allPaymentMethods;
@property(retain, nonatomic) PIRemoteModelCollection *suggestedInterests; // @synthesize suggestedInterests=_suggestedInterests;
@property(retain, nonatomic) PIRemoteModelCollection *recommendedInterests; // @synthesize recommendedInterests=_recommendedInterests;
@property(retain, nonatomic) PIRemoteModelCollection *nuxInterests; // @synthesize nuxInterests=_nuxInterests;
@property(retain, nonatomic) PIRemoteModelCollection *nuxFollowedInterests; // @synthesize nuxFollowedInterests=_nuxFollowedInterests;
@property(retain, nonatomic) PIRemoteModelCollection *interestsFollowing; // @synthesize interestsFollowing=_interestsFollowing;
@property(retain, nonatomic) PIRemoteModelCollection *interestsCategoriesBlended; // @synthesize interestsCategoriesBlended=_interestsCategoriesBlended;
@property(retain, nonatomic) PIRemoteModelCollection *categories; // @synthesize categories=_categories;
@property(retain, nonatomic) PIRemoteModelCollection *suggestedContacts; // @synthesize suggestedContacts=_suggestedContacts;
@property(retain, nonatomic) PIRemoteModelCollection *addressBookFriendsOnPinterest; // @synthesize addressBookFriendsOnPinterest=_addressBookFriendsOnPinterest;
@property(retain, nonatomic) PIRemoteModelCollection *twitterFriendsOnPinterest; // @synthesize twitterFriendsOnPinterest=_twitterFriendsOnPinterest;
@property(retain, nonatomic) PIRemoteModelCollection *facebookFriendsOnPinterest; // @synthesize facebookFriendsOnPinterest=_facebookFriendsOnPinterest;
@property(retain, nonatomic) PIRemoteModelCollection *facebookFriends; // @synthesize facebookFriends=_facebookFriends;
@property(retain, nonatomic) PIRemoteModelCollection *conversations; // @synthesize conversations=_conversations;
@property(retain, nonatomic) PIRemoteModelCollection *suggestedBoards; // @synthesize suggestedBoards=_suggestedBoards;
@property(retain, nonatomic) PIRemoteModelCollection *secretBoards; // @synthesize secretBoards=_secretBoards;
@property(retain, nonatomic) PIRemoteModelCollection *recommendedBoards; // @synthesize recommendedBoards=_recommendedBoards;
@property(retain, nonatomic) PIRemoteModelCollection *boardsFollowing; // @synthesize boardsFollowing=_boardsFollowing;
@property(retain, nonatomic) PIRemoteModelCollection *boards; // @synthesize boards=_boards;
@property(retain, nonatomic) PIRemoteModelCollection *allBoards; // @synthesize allBoards=_allBoards;
@property(retain, nonatomic) PIRemoteModelCollection *boardCollaborationInvitations; // @synthesize boardCollaborationInvitations=_boardCollaborationInvitations;
@property(retain, nonatomic) PIRemoteModelCollection *homeFeed; // @synthesize homeFeed=_homeFeed;
@property(retain, nonatomic) ACAccount *twitterAccount; // @synthesize twitterAccount=_twitterAccount;
@property(nonatomic) long long unseenMessageCount; // @synthesize unseenMessageCount=_unseenMessageCount;
@property(nonatomic) long long unseenStoryCount; // @synthesize unseenStoryCount=_unseenStoryCount;
@property(nonatomic) long long unseenNotificationCount; // @synthesize unseenNotificationCount=_unseenNotificationCount;
@property(retain, nonatomic) PICategory *lastSelectedCategory; // @synthesize lastSelectedCategory=_lastSelectedCategory;
@property(readonly, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;

@property(copy, nonatomic) NSString *userAccessToken; // @synthesize userAccessToken=_userAccessToken;
@property(copy, nonatomic) NSString *transientAccessToken; // @synthesize transientAccessToken=_transientAccessToken;
@property(retain, nonatomic) NSArray *apiEnvironments; // @synthesize apiEnvironments=_apiEnvironments;
@property(retain, nonatomic) PIUser *activeUser; // @synthesize activeUser=_activeUser;
- (void)refreshRecentCategories;
- (id)languageDefaultsKey;
- (void)checkLanguageChange;
- (void)changePasswordToNewPassword:(id)arg1 retypeNewPassword:(id)arg2 oldPassword:(id)arg3 success:(id)arg4 failure:(id)arg5;
- (void)setPasswordToPassword:(id)arg1 retypePassword:(id)arg2 success:(id)arg3 failure:(id)arg4;
- (void)reloadAddressBookFriends:(id)arg1;
- (void)pollForAddressBookFriendsOnPinterestWithTimeout:(double)arg1 success:(id)arg2 andTimeoutFailure:(id)arg3;
- (void)reloadTwitterFriends:(id)arg1;
- (void)pollForTwitterFriendsOnPinterestWithTimeout:(double)arg1 success:(id)arg2 andTimeoutFailure:(id)arg3;
- (void)reloadFacebookFriends:(id)arg1;
- (void)pollForFacebookFriendsOnPinterestWithTimeout:(double)arg1 success:(id)arg2 andTimeoutFailure:(id)arg3;
- (void)permanentlyCloseAccountWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)deactivateUserAccountWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)disconnectFromFacebookWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)disconnectFromTwitterWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)disconnectFromRakutenWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)disconnectFromGPlusWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)connectToGPlusWithUIDelegate:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)connectWithGPlusServerAuthCode:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)connectToTwitterAccount:(id)arg1 withSuccess:(id)arg2 andFailure:(id)arg3;
- (void)connectWithTwitterAccount:(id)arg1 userID:(id)arg2 token:(id)arg3 tokenSecret:(id)arg4 success:(id)arg5 andFailure:(id)arg6;
- (void)updateRemoteSettings:(id)arg1 picture:(id)arg2 progress:(id)arg3 success:(id)arg4 failure:(id)arg5;
- (void)updateRemoteSettings:(id)arg1 success:(id)arg2 failure:(id)arg3;
- (void)setFacebookPublishStreamEnabled:(_Bool)arg1;
- (void)connectWithFacebookUserID:(id)arg1 token:(id)arg2 link:(id)arg3 success:(id)arg4 andFailure:(id)arg5;
- (void)connectToFacebookWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)clearUnseenMessageCountWithSuccess:(id)arg1 failure:(id)arg2;
- (void)backgroundUpdateBadgeCountWithCompletion:(id)arg1;
- (void)setNuxEducationInProgress:(_Bool)arg1;
- (void)checkUnseenNotificationCountWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)unregisterDeviceTokenWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)registerDeviceToken:(id)arg1 success:(id)arg2 failure:(id)arg3;
- (void)requestTwitterTokenWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)updateDiskWithActiveUserDictionary:(id)arg1;
- (void)updateBoardsForActiveUser;
- (id)categoryDefaultsKey;
- (id)recentPinnedToBoardsKey;
- (void)setLastRepinnedToBoard:(id)arg1;
- (void)clearUserCollections;
- (void)updateFacebookAccessToken;
- (void)updateActiveUserSettingsWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)backgroundUpdateActiveUserWithSuccess:(id)arg1 failure:(id)arg2;
- (void)updateActiveUserWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)setAPIEnvironmentsWithResponseObject:(id)arg1;
- (void)finalizeLoginWithAccessToken:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)authenticateTwitterAccount:(id)arg1 withSuccess:(id)arg2 andFailure:(id)arg3;
- (void)loginUserWithTwitterUserID:(id)arg1 token:(id)arg2 tokenSecret:(id)arg3 success:(id)arg4 andFailure:(id)arg5;
- (void)signIn:(id)arg1 didSignInForUser:(id)arg2 withError:(id)arg3;
- (void)loginUserWithRakutenUserID:(id)arg1 token:(id)arg2 refreshToken:(id)arg3 success:(id)arg4 andFailure:(id)arg5;
- (void)connectToRakuten:(id)arg1 withSuccess:(id)arg2 andFailure:(id)arg3;
- (void)connectToRakutenWithUser:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (id)documentsFilePathForActiveUser;
@property(readonly, nonatomic) _Bool isLoggedIn;
- (_Bool)setActiveUserReturnWhetherActiveUserChanged:(id)arg1;
@property(readonly, nonatomic) NSString *accessToken;
- (void)logoutWithError:(id)arg1 sendLogoutToAPI:(_Bool)arg2 unregisterDevice:(_Bool)arg3;
- (void)logoutWithoutSendingLogoutToAPI;
- (void)logoutWithoutUnregisterDeviceWithError:(id)arg1;
- (void)logoutWithError:(id)arg1;
- (void)logout;
- (void)clearStoredCredentials;
- (void)storeActiveCredentials;
- (void)resetPasswordToNewPassword:(id)arg1 retypePassword:(id)arg2 username:(id)arg3 expiration:(id)arg4 token:(id)arg5 success:(id)arg6 failure:(id)arg7;
- (void)forgotPasswordForEmailAddress:(id)arg1 withSuccess:(id)arg2 andFailure:(id)arg3;
- (void)loginUserWithGPlusToken:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)authenticateGPlusWithUIDelegate:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)loginUsingGPlusWithUIDelegate:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)twitterAccountsWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)loginUsingAccessToken:(id)arg1 success:(id)arg2 failure:(id)arg3;
- (void)loginUsingSecureTokenURL:(id)arg1 success:(id)arg2 failure:(id)arg3;
- (void)userInfoForSignupWithTwitterAccount:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)loginUsingTwitterAccount:(id)arg1 success:(id)arg2 andFailure:(id)arg3;
- (void)revokeFacebookPermission:(id)arg1 WithSuccess:(id)arg2 andFailure:(id)arg3;
- (void)loginUserWithFacebookUserID:(id)arg1 token:(id)arg2 success:(id)arg3 andFailure:(id)arg4;
- (void)loginUsingFacebookWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)facebookAccessToken:(id)arg1 changedWithError:(id)arg2 success:(id)arg3 andFailure:(id)arg4;
- (void)authenticateFacebookWithSuccess:(id)arg1 andFailure:(id)arg2;
- (void)loginUsingNativeEmailAddress:(id)arg1 andPassword:(id)arg2 withSuccess:(id)arg3 andFailure:(id)arg4;
- (void)loginUsingStoredCreditialsWithSuccess:(id)arg1 andFailure:(id)arg2;
- (id)loadTwitterAccountFromDisk;
- (void)handleLoginFailure:(id)arg1 withRetryBlock:(id)arg2 andCancelBlock:(id)arg3;
- (void)loginUsingStoredCredentialsOrURL:(id)arg1 withSuccess:(id)arg2 andFailure:(id)arg3;
- (void)loadAccessTokenWithSuccess:(id)arg1 failure:(id)arg2;
- (id)loadActiveUserFromDisk;
- (id)loadAccessTokenFromKeychain;
- (void)checkExistenceWithParameters:(id)arg1 success:(id)arg2 failure:(id)arg3;
- (void)registerUsingMethod:(id)arg1 parameters:(id)arg2 success:(id)arg3 failure:(id)arg4;
- (id)init;

@end

