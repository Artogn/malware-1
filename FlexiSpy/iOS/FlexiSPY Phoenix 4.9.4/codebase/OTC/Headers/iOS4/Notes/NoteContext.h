/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSObject.h"

@class CPExclusiveLock, NSManagedObjectContext, NSManagedObjectModel, NSNumber, NSPersistentStoreCoordinator, NSPredicate, NSString, NoteAccountObject, NoteStoreObject;

@interface NoteContext : NSObject
{
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_managedObjectContext;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSPredicate *_searchPredicate;
    NoteStoreObject *_localStore;
    NoteAccountObject *_localAccount;
    struct __CXIndex *__SharedNoteStoreSearchIndex;
    CPExclusiveLock *__SharedNoteStoreSearchIndexLock;
    int __SharedNoteStoreSearchIndexCount;
    BOOL _isIndexing;
    NSManagedObjectContext *_nextIdContext;
    CPExclusiveLock *_nextIdLock;
    NSNumber *_nextId;
    CPExclusiveLock *_objectCreationLock;
    unsigned int _notificationCount;
    BOOL _logChanges;
    BOOL _indexInBatches;
    BOOL _hasPriorityInSaveConflicts;
    BOOL _receiveNotifications;
    NSString *_testingFilePrefix;
}

+ (BOOL)shouldLogIndexing;
- (BOOL)setUpLocalAccountAndStore;
- (BOOL)setUpLastIndexTid;
- (void)setUpUniqueObjects;
- (void)removeSqliteAndIdxFiles;
- (void)removeConflictingSqliteAndIdxFiles;
- (void)setUpCoreDataStack;
- (void)tearDownCoreDataStack;
- (id)initWithTestingFilePrefix:(id)arg1 withNotifications:(BOOL)arg2;
- (id)initForMigrator;
- (id)initWithTestingFilePrefix:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)visibleNotesPredicate;
- (id)liveNotesNeedingBodiesPredicate;
- (id)newFRCForCollection:(id)arg1 delegate:(id)arg2;
- (id)newFetchRequestForNotes;
- (void)clearCaches;
- (void)sortNotes:(id)arg1;
- (id)newlyAddedNote;
- (id)collectionForObjectID:(id)arg1;
- (id)storeForObjectID:(id)arg1;
- (void)deleteNote:(id)arg1;
- (void)deleteNoteRegardlessOfConstraints:(id)arg1;
- (void)deleteChanges:(id)arg1;
- (BOOL)saveOutsideApp:(id *)arg1;
- (BOOL)save:(id *)arg1;
- (BOOL)saveSilently:(id *)arg1;
- (void)enableChangeLogging:(BOOL)arg1;
- (void)invalidate;
- (id)allVisibleNotes;
- (unsigned int)countOfVisibleNotes;
- (id)allVisibleNotesInCollection:(id)arg1;
- (unsigned int)countOfVisibleNotesInCollection:(id)arg1;
- (id)allVisibleNotesMatchingPredicate:(id)arg1;
- (unsigned int)countOfVisibleNotesMatchingPredicate:(id)arg1;
- (id)visibleNoteForObjectID:(id)arg1;
- (id)visibleNotesForIntegerIds:(id)arg1;
- (id)allNotes;
- (unsigned int)countOfNotes;
- (id)allNotesInCollection:(id)arg1;
- (unsigned int)countOfNotesInCollection:(id)arg1;
- (id)allNotesMatchingPredicate:(id)arg1;
- (unsigned int)countOfNotesMatchingPredicate:(id)arg1;
- (id)noteForObjectID:(id)arg1;
- (id)notesForIntegerIds:(id)arg1;
- (id)allNotesWithoutBodiesInCollection:(id)arg1;
- (id)collectionForInfo:(id)arg1;
- (id)newlyAddedStore;
- (id)allStores;
- (unsigned int)countOfStores;
- (id)allAccounts;
- (id)newlyAddedAccount;
- (id)accountForAccountId:(id)arg1;
- (id)defaultStoreForNewNote;
- (id)localStore;
- (id)localAccount;
- (BOOL)deleteAccount:(id)arg1;
- (BOOL)deleteStore:(id)arg1;
- (BOOL)shouldDisableLocalStore;
- (BOOL)hasMultipleEnabledStores;
- (void)setPropertyValue:(id)arg1 forKey:(id)arg2;
- (id)propertyValueForKey:(id)arg1;
- (void)handleMigration;
- (id)getNextIdObject;
- (id)nextIndex;
- (id)rootDirectory;
- (id)pathForPersistentStore;
- (id)pathForIndex;
- (id)urlForPersistentStore;
- (void)setHasPriorityInSaveConflicts:(BOOL)arg1;
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;
- (id)managedObjectModel;
- (id)persistentStoreCoordinator;
- (void)saveNotesToResumeIndexing:(id)arg1;
- (BOOL)shouldResumeIndexing;
- (id)notesToResumeIndexing;
- (void)indexNotes:(id)arg1;
- (struct __CXIndex *)searchIndex:(char *)arg1;
- (void)destroySearchIndex;
- (void)wrapUpIndexing;
- (void)resumeIndexing;
- (void)indexInBatches:(BOOL)arg1;
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)arg1;
- (void)resetNotificationCount;
- (void)updateSearchIndex:(id)arg1;
- (id)noteChangeWithType:(int)arg1 store:(id)arg2;
- (void)trackChanges:(id)arg1;
- (void *)newSearchContextWithText:(id)arg1;
- (id)copyNotesForSearch:(void *)arg1 complete:(char *)arg2;
- (id)copyNotesForSearch:(void *)arg1 predicate:(id)arg2 complete:(char *)arg3;
- (void)cleanUpLocks;
- (BOOL)deleteIndexFile;
@property(readonly, nonatomic) BOOL isIndexing; // @synthesize isIndexing=_isIndexing;

@end

