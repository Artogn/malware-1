/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

//#import "Foursquare-Structs.h"
//#import <XXUnknownSuperclass.h> // Unknown library
//#import "UIApplicationDelegate.h"
//#import "BITCrashManagerDelegate.h"
//#import "BITUpdateManagerDelegate.h"
//#import "BITHockeyManagerDelegate.h"

@class NSString, UIImageView, FSNConnection, UIWindow;

@interface FSCoreAppDelegate : NSObject { //XXUnknownSuperclass <UIApplicationDelegate, BITHockeyManagerDelegate, BITUpdateManagerDelegate, BITCrashManagerDelegate> {
	BOOL _keyboardVisible;
	int _userState;
	UIWindow* _window;
	id _finishedCrashReportingBlock;
	UIImageView* _crashWaitingView;
	int _unreadNotificationCount;
	NSString* _deferredOAuthClientId;
	NSString* _deferredOAuthCallbackUrl;
	FSNConnection* _registerDeviceConnection;
	CGSize _keyboardSize;
}
@property(retain, nonatomic) FSNConnection* registerDeviceConnection;
@property(retain, nonatomic) NSString* deferredOAuthCallbackUrl;
@property(retain, nonatomic) NSString* deferredOAuthClientId;
@property(assign, nonatomic) int unreadNotificationCount;
@property(retain, nonatomic) UIImageView* crashWaitingView;
@property(copy, nonatomic) id finishedCrashReportingBlock;
@property(assign, nonatomic) CGSize keyboardSize;
@property(assign, nonatomic) BOOL keyboardVisible;
@property(retain, nonatomic) UIWindow* window;
@property(assign, nonatomic) int userState;
+(id)globalObjectsByLogoutAdditionalClasses;
+(id)globalObjectsByLogoutClassesCore;
+(id)globalObjectsByLogout;
//-(void).cxx_destruct;
-(void)handleCrashReporting;
-(id)userEmailForCrashManager:(id)crashManager;
-(id)userNameForCrashManager:(id)crashManager;


-(void)crashManagerDidFinishSendingCrashReport:(id)crashManager;
-(void)crashManager:(id)manager didFailWithError:(id)error;
-(void)crashManagerWillCancelSendingCrashReport:(id)crashManager;

-(id)customDeviceIdentifierForUpdateManager:(id)updateManager;

-(void)registerDeviceCompleted;
-(void)_registerDeviceWithTokenWithToken:(id)token idfa:(id)idfa;
-(void)_registerDeviceWithToken:(id)token;
-(void)registerUniqueDevice;

-(void)confirmToken;

-(void)application:(id)application didFailToRegisterForRemoteNotificationsWithError:(id)error;
-(void)application:(id)application didRegisterForRemoteNotificationsWithDeviceToken:(id)deviceToken;

-(void)registerForRemoteNotifications;
-(void)apiResultContainedNotifications:(id)notifications;
-(void)updateUnreadNotificationCount:(unsigned)count applicationBadgeCount:(unsigned)count2;
-(BOOL)didCrashInLastSessionOnStartup;
-(void)setupCrashReporting:(id)reporting;
-(void)keyboardWillHideNotification:(id)keyboard;
-(void)keyboardWillShowNotification:(id)keyboard;
-(void)deleteAndRecreateCacheDirectory;
-(void)dropAndReloadCoreDataStore;
-(void)purgeKeychain;
-(BOOL)userExplicitlyLoggedOut;
-(void)deauthorize;
-(void)shouldDeauthorize:(id)deauthorize;

-(void)logout;

-(BOOL)handleAccessTokenResultDict:(id)dict;
-(BOOL)handleAccessToken:(id)token;
-(void)fetchExistingAuthTokenWithCompletion:(id)completion;
-(id)settingsUserSelfTransaction;
-(void)refreshSettingsUserSelfWithCompletion:(id)completion;
-(void)fetchAuthenticatedUserWithCompletion:(id)completion;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification fetchCompletionHandler:(id)handler;
-(id)coreAppRootHelper;
-(BOOL)handleOrDeferURL:(id)url;
-(void)setupAppRoutes;
-(void)applicationDidEnterBackground:(id)application;
-(BOOL)shouldShowBackToAppBar;
-(BOOL)application:(id)application openURL:(id)url sourceApplication:(id)application3 annotation:(id)annotation;
-(void)setupApplicationFinished:(id)finished withLaunchOptions:(id)launchOptions;
-(void)setupApplication:(id)application withLaunchOptions:(id)launchOptions;
-(BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
-(void)dealloc;
-(id)init;
-(id)hockeyBetaIdentifier;
-(id)hockeyLiveIdentifier;
-(void)returnToPreviousAppBarShouldDisappear;
-(id)applicationStylingOverrides;
-(id)knownSourceApplicationInfo;
-(id)dictionaryForBundleId:(id)bundleId inArray:(id)array;
-(void)appWasLaunchedBy:(id)by returnURLScheme:(id)scheme;
-(void)presentOAuthAuthorizationScreenForClientId:(id)clientId callbackUrlString:(id)string;
-(BOOL)handleOAuthURL:(id)url;
-(BOOL)validateDateString:(id)string;
@end

