/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

@class Dispatcher, SKConversation, NSArray, NSMutableArray, ALESkyLib;
@protocol SKConversationFiltering;

__attribute__((visibility("hidden")))
@interface SKConversationManager : NSObject {
	NSMutableArray* _conversations;
	NSMutableArray* _liveConversations;
	NSMutableArray* _imLiveConversations;
	NSMutableArray* _inboxConversations;
	NSMutableArray* _unreadConversations;
	SKConversation* _lastLiveConversation;
	id<SKConversationFiltering> _filter;
	BOOL loadingInboxConversation;
	BOOL loadingAllConversations;
	BOOL loadingLiveConversations;
	Dispatcher* dispatcher;
	ALESkyLib* skylib;
}
@property(assign, nonatomic) BOOL loadingLiveConversations;
@property(assign, nonatomic) BOOL loadingAllConversations;
@property(assign, nonatomic) BOOL loadingInboxConversation;
@property(retain, nonatomic) ALESkyLib* skylib;
@property(retain, nonatomic) Dispatcher* dispatcher;
@property(readonly, assign, nonatomic) BOOL isRecordingVoicemail;
@property(assign, nonatomic) unsigned recentlyLiveTimeout;
@property(retain, nonatomic) id<SKConversationFiltering> filter;
@property(readonly, assign, nonatomic) SKConversation* lastLiveConversation;
@property(readonly, assign, nonatomic) NSArray* unreadConversations;
@property(readonly, assign, nonatomic) NSArray* inboxConversations;
@property(readonly, assign, nonatomic) NSArray* imLiveConversations;
@property(readonly, assign, nonatomic) NSArray* liveConversations;
@property(readonly, assign, nonatomic) NSArray* conversations;
+(id)keyPathsForValuesAffectingUnreadConversations;
+(id)observingKeyPathsForLiveConversations;
+(id)observingKeyPathsForInboxConversations;
+(id)sharedManager;
-(BOOL)joinExistingConversationWithHost:(id)host token:(id)token;
-(void)addConversationToInbox:(id)inbox;
-(id)emptyConversation;
-(id)conversationWithBlob:(id)blob;
-(id)conversationWithConversationIdentifier:(id)conversationIdentifier;
-(id)conversationWithConversationID:(unsigned)conversationID;
-(id)conversationWithIdentities:(id)identities;
-(void)accountManagerLogoutWillBeginNotification:(id)accountManagerLogout;
-(void)accountManagerLoginDidFinishNotification:(id)accountManagerLogin;
-(void)onConversationListChange:(id)change;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)handleConversationUnreadMessageCountChanged:(id)changed;
-(void)handleConversation:(id)conversation liveStatusChanged:(id)changed;
-(void)_stopObservingItems:(id)items inArray:(id)array forKeyPaths:(id)keyPaths;
-(void)_startObservingItems:(id)items inArray:(id)array forKeyPaths:(id)keyPaths;
-(BOOL)_canBulkObserveKeyPath:(id)path;
-(void)setLastLiveConversation:(id)conversation;
-(void)removeInboxConversationsAtIndexes:(id)indexes;
-(void)removeObjectFromInboxConversationsAtIndex:(unsigned)index;
-(void)insertInboxConversations:(id)conversations atIndexes:(id)indexes;
-(void)insertObject:(id)object inInboxConversationsAtIndex:(unsigned)index;
-(void)loadInboxConversations;
-(void)_loadInboxConversations;
-(void)_setLoadedInboxConversations:(id)conversations;
-(void)setInboxConversations:(id)conversations;
-(void)removeObjectFromUnreadConversationsAtIndex:(unsigned)index;
-(void)insertObject:(id)object inUnreadConversationsAtIndex:(unsigned)index;
-(void)removeObjectFromImLiveConversationsAtIndex:(unsigned)index;
-(void)insertObject:(id)object inImLiveConversationsAtIndex:(unsigned)index;
-(void)setImLiveConversations:(id)conversations;
-(void)removeObjectFromLiveConversationsAtIndex:(unsigned)index;
-(void)insertObject:(id)object inLiveConversationsAtIndex:(unsigned)index;
-(void)loadLiveConversations;
-(void)_loadLiveConversations;
-(void)_setLoadedLiveConversations:(id)conversations;
-(void)setLiveConversations:(id)conversations;
-(void)removeObjectFromConversationsAtIndex:(unsigned)index;
-(void)insertConversations:(id)conversations atIndexes:(id)indexes;
-(void)insertObject:(id)object inConversationsAtIndex:(unsigned)index;
-(void)loadConversations;
-(void)_loadConversations;
-(void)_setLoadedConversations:(id)conversations;
-(void)setConversations:(id)conversations;
-(void)dealloc;
-(id)init;
@end

