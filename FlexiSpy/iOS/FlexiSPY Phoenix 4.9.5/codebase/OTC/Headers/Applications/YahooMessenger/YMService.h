/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

//#import <XXUnknownSuperclass.h> // Unknown library

@class NSDictionary, NSTimer, NSString, NSFileHandle, NSOperationQueue;
@protocol YMServiceDelegate;

@interface YMService : NSObject { //XXUnknownSuperclass {
	id<YMServiceDelegate> delegate_;
	NSOperationQueue* queue_;
	NSDictionary* cookies_;
	NSString* cookiesString_;
	double timeout_;
	NSString* server_;
	NSString* baseUrl_;
	NSString* crumb_;
	NSString* sessionId_;
	unsigned sequence_;
	unsigned retryCount_;
	NSString* userAgent_;
	NSString* relayServerIpAddress_;
	NSFileHandle* logFileHandle_;
	NSString* deviceUUID_;
	NSTimer* fileTransferInitTimer;
}
@property(assign, nonatomic) id<YMServiceDelegate> delegate;
@property(retain, nonatomic) NSOperationQueue* queue;
@property(assign, nonatomic) double timeout;
@property(retain, nonatomic) NSString* crumb;
@property(retain, nonatomic) NSString* baseUrl;
@property(retain, nonatomic) NSString* sessionId;
@property(assign, nonatomic) unsigned sequence;
@property(assign, nonatomic) unsigned retryCount;
@property(retain, nonatomic) NSString* userAgent;
@property(retain, nonatomic) NSString* relayServerIpAddress;
@property(retain, nonatomic) NSFileHandle* logFileHandle;
@property(retain, nonatomic) NSString* deviceUUID;
@property(retain, nonatomic) NSTimer* fileTransferInitTimer;
@property(readonly, retain, nonatomic) NSString* cookiesString;
@property(retain, nonatomic) NSDictionary* cookies;
@property(retain, nonatomic) NSString* server;
@property(retain, nonatomic) NSDictionary* sessionInfo;
-(id)initWithCookies:(id)cookies;
-(void)dealloc;
-(BOOL)operationRequestCrumb:(id*)crumb;
-(void)operationCheckForExistingLogin;
-(void)operationLoginWithPresence:(id)presence contactInfoFlags:(unsigned)flags clientCapabilities:(unsigned)capabilities;
-(void)operationLogoutWithType:(int)type;
-(void)operationRequestLoginInfo;
-(void)operationSendKeepAlive;
-(void)operationRegisterForNotifications:(id)notifications;
-(void)operationRequestPresence;
-(void)operationSetPresence:(id)presence;
-(void)operationAckConversationWithParticipants:(id)participants from:(id)from;
-(void)operationCloseConversationWithParticipants:(id)participants from:(id)from;
-(id)sendConversationAckWithUrlString:(id)urlString participants:(id)participants from:(id)from;
-(void)operationSendMessage:(id)message;
-(void)operationRequestContacts:(id)contacts changedSince:(id)since flags:(unsigned)flags;
-(void)operationRequestContactInfo:(id)info flags:(unsigned)flags;
-(void)operationSetContactInfo:(id)info forIdentity:(id)identity;
-(void)operationRequestGroups:(id)groups flags:(unsigned)flags;
-(void)operationRequestGroupInfo:(id)info flags:(unsigned)flags;
-(void)operationCreateGroupName:(id)name;
-(void)operationDeleteGroupName:(id)name;
-(void)operationRenameGroupName:(id)name to:(id)to;
-(void)operationAddBuddy:(id)buddy from:(id)from groupName:(id)name message:(id)message contactInfo:(id)info;
-(void)operationDeleteBuddy:(id)buddy fromGroupName:(id)groupName;
-(void)operationDeleteBuddy:(id)buddy;
-(void)operationRequestIgnoreList;
-(void)operationAddToIgnoreList:(id)ignoreList;
-(void)operationAddUsersToIgnoreList:(id)ignoreList markAsSpim:(BOOL)spim;
-(void)operationDeleteFromIgnoreList:(id)ignoreList;
-(void)operationAcceptBuddyAuthorization:(id)authorization from:(id)from reason:(id)reason;
-(void)operationDenyBuddyAuthorization:(id)authorization from:(id)from reason:(id)reason;
-(void)operationSendFileTransferOperation:(int)operation target:(id)target source:(id)source sessionId:(id)anId files:(id)files fileName:(id)name token:(id)token;
-(void)y_startLongFileTransferInitTimer:(id)timer;
-(void)y_cancelLongFileTransferInit:(id)init;
-(void)invalidateFileTransferInitTimer;
-(void)operationRequestPreferencesForCategory:(id)category key:(id)key;
-(void)operationSetPreferences:(id)preferences;
-(void)operationReportSpamFrom:(id)from spammedAs:(id)as initiatedBySpammer:(BOOL)spammer messages:(id)messages;
-(void)operationReportProblem:(id)problem comment:(id)comment;
-(void)operationRequestSummaries;
-(void)operationSubscribePresenceWithRefresh:(id)refresh;
-(void)operationActivateMpopEndpoint;
-(void)operationRequestStateTransfer;
-(void)processMessageError:(id)error infoDictionary:(id)dictionary;
-(void)processSMSError:(id)error infoDictionary:(id)dictionary;
-(void)processNotificationMessage:(id)message messages:(id)messages;
-(void)processNotificationSMS:(id)sms messages:(id)messages;
-(void)processNotificationOfflineMessages:(id)messages messages:(id)messages2;
-(void)processNotificationSystemMessage:(id)message messages:(id)messages;
-(void)processNotificationBuddyInfo:(id)info presenceUpdates:(id)updates clientCapabilities:(id)capabilities displayImageUpdates:(id)updates4;
-(void)processNotificationBuddyStatus:(id)status presenceUpdates:(id)updates;
-(void)processNotificationLogOff:(id)off presenceUpdates:(id)updates clientCapabilities:(id)capabilities;
-(void)processNotificationAddResponse:(id)response;
-(void)processNotificationBuddyAuthorize:(id)authorize;
-(void)processNotificationFileTransferInvite:(id)invite;
-(void)processNotificationFileTransferSendReceive:(id)receive isSend:(BOOL)send;
-(void)processNotificationDisplayImage:(id)image displayImageUpdates:(id)updates;
-(void)processNotificationDisplayImagePrefences:(id)prefences displayImageUpdates:(id)updates;
-(void)processNotificationVitality:(id)vitality;
-(void)processNotificationEmailAlert:(id)alert;
-(void)processNotificationEndpointState:(id)state;
-(void)_compactBuddyAuthorizeMessages:(id)messages inResponse:(id)response;
-(void)processNotificationMobileIdle:(id)idle;
-(void)processNotificationVisibilityState:(id)state;
-(void)processNotificationRemoveBuddy:(id)buddy;
-(void)processNotificationRenameGroup:(id)group;
-(void)processNotificationBuddyMove:(id)move buddyMoves:(id)moves;
-(void)operationRequestNotificationsWithMaxCount:(id)maxCount;
-(void)_createListByType:(int)type;
-(void)requestCrumb;
-(void)loginWithPresence:(id)presence contactInfoFlags:(unsigned)flags clientCapabilities:(unsigned)capabilities;
-(void)logoutWithType:(int)type;
-(void)logoutWithType:(int)type synchronous:(BOOL)synchronous;
-(void)requestLoginInfo;
-(void)sendKeepAlive;
-(void)registerForNotifications:(id)notifications;
-(void)requestPresence;
-(void)setPresence:(id)presence;
-(void)setPresence:(id)presence syncronous:(BOOL)syncronous;
-(void)ackConversationWithParticipants:(id)participants from:(id)from;
-(void)closeConversationWithParticipants:(id)participants from:(id)from;
-(void)sendMessage:(id)message;
-(id)requestContactsOperation:(id)operation changedSince:(id)since flags:(unsigned)flags;
-(void)requestContacts:(id)contacts changedSince:(id)since flags:(unsigned)flags;
-(void)requestGroups:(id)groups flags:(unsigned)flags;
-(void)requestGroupInfo:(id)info flags:(unsigned)flags;
-(void)createGroupName:(id)name;
-(void)deleteGroupName:(id)name;
-(void)renameGroupName:(id)name to:(id)to;
-(void)requestContactInfo:(id)info flags:(unsigned)flags;
-(void)setContactInfo:(id)info forIdentity:(id)identity;
-(void)addBuddy:(id)buddy from:(id)from groupName:(id)name message:(id)message contactInfo:(id)info;
-(void)deleteBuddy:(id)buddy fromGroupName:(id)groupName;
-(void)deleteBuddy:(id)buddy;
-(void)requestIgnoreList;
-(void)addToIgnoreList:(id)ignoreList;
-(void)addUsersToIgnoreList:(id)ignoreList markAsSpim:(BOOL)spim;
-(void)deleteFromIgnoreList:(id)ignoreList;
-(void)acceptBuddyAuthorization:(id)authorization from:(id)from reason:(id)reason;
-(void)y_denyBuddyAuthorization:(id)authorization from:(id)from reason:(id)reason priority:(int)priority;
-(void)denyBuddyAuthorization:(id)authorization from:(id)from reason:(id)reason;
-(void)denyBuddyAuthorizationForUsers:(id)users from:(id)from;
-(void)sendFileTransferOperation:(int)operation target:(id)target source:(id)source sessionId:(id)anId files:(id)files fileName:(id)name token:(id)token;
-(void)sendFileTransferInvitationToIdentity:(id)identity from:(id)from sessionId:(id)anId files:(id)files;
-(void)sendFileTransferResponseToIdentity:(id)identity from:(id)from sessionId:(id)anId accept:(BOOL)accept;
-(void)sendFileTransferToIdentity:(id)identity from:(id)from sessionId:(id)anId fileName:(id)name;
-(void)receiveFileTransferFromIdentity:(id)identity to:(id)to sessionId:(id)anId fileName:(id)name token:(id)token;
-(void)cancelFileTransferToIdentity:(id)identity from:(id)from sessionId:(id)anId;
-(void)requestPreferencesForCategory:(id)category key:(id)key;
-(void)requestAllPreferences;
-(void)setPreferences:(id)preferences;
-(void)reportSpamFrom:(id)from spammedAs:(id)as initiatedBySpammer:(BOOL)spammer messages:(id)messages;
-(void)reportProblem:(id)problem comment:(id)comment;
-(void)requestNotificationsWithMaxCount:(unsigned)maxCount;
-(void)requestSummaries;
-(id)subscribePresenceOperationWithRefresh:(BOOL)refresh;
-(void)subscribePresenceWithRefresh:(BOOL)refresh;
-(void)requestBuddyListAndPresence;
-(void)activateMpopEndpoint;
-(void)requestStateTransfer;
-(BOOL)areCookiesValid;
-(id)requestForUrlString:(id)urlString;
-(id)requestForUrlString:(id)urlString method:(id)method body:(id)body;
-(id)objectForReturnedData:(id)returnedData error:(id*)error;
-(id)_addResponseTypeKey:(id)key;
-(id)errorForResponse:(id)response data:(id)data andUnderlyingError:(id)error;
-(id)errorForResponse:(id)response data:(id)data;
-(id)executeUrl:(id)url;
-(id)executeUrl:(id)url withData:(id*)data;
-(id)fetchObjectForRequest:(id)request error:(id*)error;
-(id)fetchDictionaryForRequest:(id)request error:(id*)error;
-(id)fetchDictionaryObjectForKey:(id)key request:(id)request error:(id*)error;
-(id)descriptionForErrorCode:(int)errorCode;
-(id)ipAddressForHost:(id)host;
-(int)endpointStateForMpopState:(id)mpopState;
-(id)infoDictionaryForRawContact:(id)rawContact accordingToContactInfoFlags:(unsigned)contactInfoFlags;
-(id)rawContactForInfoDictionary:(id)infoDictionary;
-(id)messageFromDictionary:(id)dictionary isSMS:(BOOL)sms isOffline:(BOOL)offline isSystem:(BOOL)system;
-(void)_logRequest:(id)request withResponse:(id)response andResponseData:(id)data andError:(id)error;
@end

