/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

//#import "assistivetouchd-Structs.h"
//#import "HNDViewDelegateControl.h"
//#import "HNDWindowDelegateProtocol.h"
//#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, HNDPinchChainView, HNDFingerView, HNDView, AXDispatchTimer, UIView, HNDWindow, HNDRocker;

__attribute__((visibility("hidden")))
@interface HNDDisplayManager : NSObject {//  XXUnknownSuperclass <HNDViewDelegateControl, HNDWindowDelegateProtocol> {
	AXDispatchTimer* _idleTimer;
	AXDispatchTimer* _longIdleTimer;
	HNDWindow* _window;
	HNDWindow* _ignoredWindow;
	HNDRocker* _rocker;
	UIView* _contentView;
	UIView* _fingerContentView;
	UIView* _scannerContentView;
	UIView* _scannerBackCursorView;
	UIView* _scannerFrontCursorView;
	HNDView* _rockerDismiss;
	HNDView* _multiTouchBackgound;
	CGPoint _currentPoint;
	CGPoint _menuPoint;
	CGPoint _previousMenuPoint;
	double _menuOpenTime;
	CGPoint _menuOpenDistance;
	CGPoint _pointBeforePinch;
	BOOL _menuDownWillFireAutomaticUp;
	CGRect _screenBounds;
	HNDFingerView* _pinchFinger1;
	HNDFingerView* _pinchFinger2;
	HNDPinchChainView* _pinchChain;
	int _orientation;
	NSMutableArray* _fingers;
	BOOL _showingHoverOverMenu;
	BOOL _isPressedDown;
	BOOL _openedMenuOnDown;
	BOOL _inPinchMode;
	double _nubbitTouchToUpTimeLatency;
	double _nubbitTouchDownTime;
//	SCRCMathAverageValue _nubbitDistanceTracking;
//	SCRCMathAverageValue _nubbitAngleTracking;
	float _nubbitVelocity;
	BOOL _nubbitMoving;
	CGPoint _downPoint;
	CGPoint _movePoint;
	CGPoint _nubbitStartDownPoint;
	HNDView* _downView;
	unsigned _lastHandType;
	float _nubbitPositionPercentage;
	int _nubbitPositionEdge;
	CGPoint _preKeyboardMovePosition;
	BOOL _visualsHidden;
	AXDispatchTimer* _positionSetTimer;
	BOOL _keyboardVisible;
	CGRect _keyboardFrame;
}
@property(readonly, assign, nonatomic) UIView* scannerFrontCursorView;
@property(readonly, assign, nonatomic) UIView* scannerBackCursorView;
@property(readonly, assign, nonatomic) UIView* scannerContentView;
@property(assign, nonatomic) BOOL showingHoverOverMenu;
+(double)fadeDuration;
+(id)sharedManager;
+(void)initialize;
-(void)viewPressed:(id)pressed;
-(void)volumeChanged;
-(BOOL)inNubbitMode;
-(void)updateRingerSwitch;
-(void)deviceCountChanged:(int)changed;
-(void)_deviceCountChanged:(id)changed;
-(void)updateMenuStyle;
-(void)restartWithCompletion:(id)completion;
-(void)handlePinchToolEndMove;
-(void)handlePinchToolBeginMove;
-(void)resetPinchChain:(CGPoint)chain;
-(void)getFirstFingerPosition:(CGPoint*)position secondFingerPosition:(CGPoint*)position2 forPinchAroundFulcrum:(CGPoint)pinchAroundFulcrum;
-(CGPoint)_onScreenMidpointForPinchChainMidpoint:(CGPoint)pinchChainMidpoint;
-(void)hidePinchFingers;
-(void)showPinchFingers:(BOOL)fingers withPoint:(CGPoint)point animateToVisible:(BOOL)visible alpha:(float)alpha;
-(void)showPinchFingers:(BOOL)fingers withPoint:(CGPoint)point;
-(void)updatePinchChain;
-(void)_updatePinchChainFrame;
-(void)removeMultiFingers:(BOOL)fingers animateToPoint:(CGPoint)point;
-(void)removeMultiFingers:(BOOL)fingers;
-(BOOL)isMenuVisible;
-(void)showMenu:(BOOL)menu;
-(void)hideVisuals:(BOOL)visuals animate:(BOOL)animate;
-(BOOL)visualsHidden;
-(BOOL)acceptsHitTest:(CGPoint)test;
-(void)showPrimaryFinger:(BOOL)finger location:(CGPoint)location;
-(void)showPrimaryFinger:(BOOL)finger active:(BOOL)active location:(CGPoint)location;
-(CGPoint)_menuPointForFingerLayout;
-(void)adjustMultiFingersToScreenCenter;
-(CGPoint)centroidForPinchChainMidPoint:(CGPoint)pinchChainMidPoint;
-(CGPoint)standardCentroidForMultifingers:(CGPoint)multifingers;
-(CGPoint)absoluteCentroidForMultifingers:(CGPoint)multifingers;
-(CGRect)rotatedScreenBounds;
-(void)setFingersVisible:(BOOL)visible animated:(BOOL)animated;
-(void)performPress:(int)press type:(int)type;
-(BOOL)inPinchMode;
-(void)_handlePinchPress:(BOOL)press;
-(void)_multiFingers:(BOOL)fingers animated:(BOOL)animated;
-(void)cancelImplodeAnimation;
-(void)showCircleMenu:(BOOL)menu;
-(void)fingerFinishedImplosion:(id)implosion;
-(void)_displayLinkFired:(id)fired;
-(CGRect)screenBounds;
-(CGPoint)point;
-(CGPoint)screenPoint;
-(CGPoint)rotatedScreenPoint;
-(CGPoint)hoverMoved:(CGPoint)moved;
-(BOOL)initialDownMenuCanTransitionToPressDown;
-(BOOL)initialMenuDownHasFinished;
-(int)orientation;
-(void)setOrientation:(int)orientation withCompletion:(id)completion;
-(void)_updateViewsForOrientation;
-(unsigned)isFingerInCorner;
-(float)_rotationDegreesForOrientation:(int)orientation;
-(void)modifyPinch:(BOOL)pinch angle:(float)angle movement:(CGPoint)movement;
-(void)modifyRealPinch:(CGPoint)pinch finger:(id)finger;
-(CGPoint)modifyFakePinch:(CGPoint)pinch;
-(void)_updateCurrentPoint:(CGPoint)point;
-(CGPoint)normalizedPointDifference:(CGPoint)difference;
-(void)_startIdleTimer;
-(void)_idleTimerFired;
-(void)activateDisplayItems;
-(void)_longIdleTimerFired;
-(id)currentMultiFingerPositions;
-(void)showMultiFingersWithPoints:(id)points alpha:(float)alpha;
-(void)showMultiFingersWithPoints:(id)points;
-(BOOL)_shouldEnableMultiTouchToolBackground;
-(void)moveFinger:(int)finger toPoint:(CGPoint)point;
-(BOOL)canMoveFinger:(int)finger toPoint:(CGPoint)point;
-(id)addFinger:(CGPoint)finger;
-(id)addFinger:(CGPoint)finger active:(BOOL)active;
-(id)multiFingers;
-(id)fingerViews;
-(CGPoint)convertPointFromOrientation:(CGPoint)orientation;
-(CGPoint)convertPointToOrientation:(CGPoint)orientation;
-(BOOL)handleRealEvent:(id)event;
-(id)viewAtPoint:(CGPoint)point;
-(id)viewAtPoint:(CGPoint)point downPoint:(CGPoint*)point2 window:(id)window;
-(void)_handleNubbitMove:(CGPoint)move;
-(void)keyboardVisible:(BOOL)visible withFrame:(CGRect)frame;
-(void)_moveNubbitAboveKeyboard:(CGRect)keyboard;
-(CGPoint)_nubbitPositionForKeyboardFrame:(CGRect)keyboardFrame;
-(BOOL)_nubbitIsOverKeyboard:(CGRect)keyboard;
-(BOOL)_position:(CGPoint)position isOverKeyboard:(CGRect)keyboard;
-(void)_repositionNubbitAfterLift:(CGPoint)lift;
-(void)_moveNubbitToPosition:(CGPoint)position forKeyboard:(BOOL)keyboard;
-(void)_updateNubbitPosition;
-(CGPoint)_nubbitPointForEdgePosition;
-(void)_moveNubbitToPosition:(CGPoint)position;
-(CGPoint)_validateNubbitPosition:(CGPoint)position forKeyboard:(BOOL)keyboard;
-(CGPoint)nubbitPositionForFlick:(CGPoint)flick;
-(int)_angleForDegrees:(float)degrees;
-(CGPoint)closestNubbitPositionForPoint:(CGPoint)point offsetByMidpoint:(BOOL)midpoint;
-(int)fingerCount;
-(void)setMultiTouchToolBackgroundEnabled:(BOOL)enabled;
-(BOOL)multiTouchToolBackgroundEnabled;
-(void)_hoverMultiFingers:(CGPoint)fingers;
-(void)_hoverFingerRecorder:(CGPoint)recorder;
-(void)dealloc;
-(void)cleanup;
-(void)initializeDisplayWithScanner:(BOOL)scanner completion:(id)completion;
-(id)init;
@end

