/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSObject.h"
//
//#import "BBMConnectionDelegate-Protocol.h"
//#import "BBMDSMessageConsumer-Protocol.h"

@class BBGDSGeneratedModel, BBMADSDSGeneratedModel, BBMCoreAccessGroup, BBMDSGeneratedModel, BBMUser, NSArray, NSCache, NSMutableSet, NSString;

//@interface BBMCoreAccess : NSObject <BBMConnectionDelegate, BBMDSMessageConsumer>
//{
//    BBGDSGeneratedModel *_groupModel;
//    BBMCoreAccessGroup *_groupService;
//    BBMADSDSGeneratedModel *_adsModel;
//    NSCache *_stickerMessagesMarkedRead;
//    NSMutableSet *_stickerMonitorSet;
//    BBMDSGeneratedModel *_coreModel;
//    NSString *_setupError;
//}
@interface BBMCoreAccess (BBM_2_1_0)
+ (id)keyPathsForValuesAffectingAllConversations;
+ (id)keyPathsForValuesAffectingCurrentUser;
+ (id)keyPathsForValuesAffectingCurrentUserURI;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *setupError; // @synthesize setupError=_setupError;
@property(readonly, nonatomic) BBMADSDSGeneratedModel *adsModel; // @synthesize adsModel=_adsModel;
@property(readonly, nonatomic) BBMDSGeneratedModel *coreModel; // @synthesize coreModel=_coreModel;
//- (void).cxx_destruct;
- (void)handleJSONMessage:(id)arg1 messageType:(id)arg2 listId:(id)arg3;
- (void)handleOverflow;
- (id)sortUpdates:(id)arg1;
- (id)nonEmptyChatFilter;
- (id)getAvatarFilename;
- (BOOL)isPINCurrentUser:(id)arg1;
- (BOOL)comparePins:(id)arg1 andPin2:(id)arg2;
- (id)savePicToTmpTransferDir:(id)arg1;
- (id)copyFileForUserAvatar:(id)arg1;
- (id)saveAvatarToFileSystem:(id)arg1;
- (id)getFileTransferWithTransferId:(id)arg1;
- (void)sendContextMessageId:(id)arg1 withText:(id)arg2 to:(id)arg3 type:(int)arg4;
- (void)fileTransferCancel:(id)arg1;
- (void)fileTransferAccept:(id)arg1 atPath:(id)arg2;
- (void)fileTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3;
- (id)getPictureWithTransferId:(id)arg1;
- (void)resendChatMessageWithConversationUri:(id)arg1 andID:(long long)arg2;
- (void)pictureTransferAcceptWithId:(id)arg1;
- (void)pictureCancel:(id)arg1;
- (void)pictureAcceptHigherQuality:(id)arg1;
- (void)requestHigherQualityForPicture:(id)arg1;
- (void)pictureTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3;
- (void)closeQRCode:(id)arg1;
- (id)getQRCodeImage:(id)arg1;
- (id)openQRCode:(id)arg1;
- (void)deleteChatHistory;
- (void)updateDraftMessageForConversationURI:(id)arg1 withMessage:(id)arg2;
- (void)clearUpdatesSplat;
- (void)clearChatSplat;
- (BOOL)hasBBMConversations;
- (void)markInviteRead:(id)arg1;
- (void)sendTypingNotificationForConversationURI:(id)arg1 isTyping:(BOOL)arg2;
- (id)generateConversationURI;
- (void)addParticipantsToConversation:(id)arg1 participants:(id)arg2;
- (void)createConference:(id)arg1 participants:(id)arg2;
- (void)endChatForconversation:(id)arg1;
- (void)startChannelChatForConversationUri:(id)arg1 ownerUri:(id)arg2;
- (void)startChatForConversationURI:(id)arg1 withInviteeURI:(id)arg2;
- (void)addLocationWithInfo:(id)arg1;
- (id)getLocations;
- (void)sendGlympse:(id)arg1 message:(id)arg2 toConversationURI:(id)arg3;
- (void)sendDropboxMessage:(id)arg1 chooserResult:(id)arg2 caption:(id)arg3;
- (void)sendMessage:(id)arg1 toConversationURI:(id)arg2;
- (void)internalNotifyAnalyticsForStickerReceivedMessage:(id)arg1 conversationURI:(id)arg2 analyticsInfo:(id)arg3;
- (void)notifyAnalyticsForStickerReceivedMessage:(id)arg1 conversationURI:(id)arg2 analyticsInfo:(id)arg3;
- (void)markMessageRead:(id)arg1 withConversationURI:(id)arg2;
- (void)sendStatusMessageForConversationURI:(id)arg1 identifier:(long long)arg2 status:(int)arg3;
- (id)allMessagesForConversationURI:(id)arg1;
- (void)removeConversationForURI:(id)arg1;
- (id)uriForConversationWithIdentifier:(id)arg1;
- (id)getConversationForURI:(id)arg1;
- (BOOL)isGroupConversationsStateCurrent;
- (BOOL)isConversationsStateCurrent;
- (id)getGroupConversations;
- (id)getConversations;
- (id)getConversationList;
- (id)getChannelConversationsForChannel:(id)arg1;
- (id)getConversationsIncludingGroupConversations:(BOOL)arg1;
- (BOOL)isAllConversationListsStateCurrent;
- (id)get1on1ConversationWithUser:(id)arg1;
- (void)notifyFileTransferWithType:(id)arg1 path:(id)arg2;
- (id)getChannelsState;
- (void)channelBlockUserFromChannelUri:(id)arg1 commentId:(id)arg2 postId:(id)arg3;
- (void)updateChannelOwnerProfile:(id)arg1;
- (id)getChannelOwnerProfile;
- (void)reportLocation:(id)arg1;
- (double)getLocationReportingDisplacement;
- (BOOL)isLocationReportingEnabledInCore;
- (void)setLocationReportingInCore:(BOOL)arg1;
- (id)getChannelInvitationWithIdentifier:(id)arg1;
- (id)getChannelInvitationsReceived;
- (void)channelAcceptInvitation:(id)arg1;
- (void)channelSendMemberInviteToContactUris:(id)arg1 channelURI:(id)arg2 withInviteMessage:(id)arg3;
- (void)unflagChannelPostCommentWithChannelUri:(id)arg1 withPostId:(id)arg2 withCommentIdentifier:(id)arg3;
- (void)unflagChannelPostWithChannelUri:(id)arg1 withPostIdentifier:(id)arg2;
- (void)unflagChannelWithChannelUri:(id)arg1;
- (void)flagChannelPostCommentWithChannelUri:(id)arg1 withPostId:(id)arg2 withCommentIdentifier:(id)arg3;
- (void)flagChannelPostWithChannelUri:(id)arg1 withPostIdentifier:(id)arg2;
- (void)flagChannelWithChannelUri:(id)arg1;
- (id)fetchMoreSparseListWithType:(id)arg1 andListId:(id)arg2 withLimit:(unsigned int)arg3;
- (id)sparseListWithType:(id)arg1 andListId:(id)arg2;
- (id)getFeaturedPostsLiveList;
- (id)getFeaturedChannelsLiveList;
- (void)createChannelPostCommentWithChannelPostCommentObject:(id)arg1;
- (void)markReadForPostIds:(id)arg1 forChannelUri:(id)arg2;
- (id)fetchMoreChannelPostCommentsWithListId:(id)arg1 withLimit:(unsigned int)arg2;
- (id)getChannelPostCommentsWithListId:(id)arg1;
- (id)fetchMoreChannelPostsWithListId:(id)arg1 withLimit:(unsigned int)arg2;
- (id)getChannelPostsWithListId:(id)arg1;
- (void)markChannelPostHype:(BOOL)arg1 withPostId:(id)arg2 andChannelUri:(id)arg3;
- (id)getPostImageLiveMap;
- (void)requestPostImageForPostId:(id)arg1 imageUrl:(id)arg2 channelUri:(id)arg3;
- (void)removePendingPostWithId:(id)arg1;
- (id)getPendingPostsForChannelUri:(id)arg1;
- (id)getFailedPendingPostsForChannelUri:(id)arg1;
- (void)addPendingPostForChannelUri:(id)arg1 title:(id)arg2 body:(id)arg3 imagePath:(id)arg4;
- (id)getPostLiveMap;
- (void)favoriteSubscribedChannelForUri:(id)arg1 isFavorite:(BOOL)arg2;
- (void)unsubscribeChannelForUri:(id)arg1;
- (void)subscribeChannelForUri:(id)arg1 reason:(int)arg2 minAge:(id)arg3;
- (id)getChannelSubCategoryOf:(id)arg1;
- (id)getChannelCategoryLiveList;
- (void)removeOwnedChannelForUri:(id)arg1;
- (void)createNewChannelWithChannelObject:(id)arg1;
- (void)ignoreChannelPostCommentFlag:(id)arg1;
- (void)ignoreChannelPostFlag:(id)arg1;
- (id)getCommentLiveMap;
- (void)requestCommentObjectsForElements:(id)arg1;
- (id)getCommentObjectsForArrayOfCommentIds:(id)arg1;
- (void)requestPostObjectsForElements:(id)arg1;
- (id)getPostObjectsForArrayOfPostIds:(id)arg1;
- (id)getFlaggedPostCommentsWithChannelUri:(id)arg1;
- (id)getFlaggedPostsWithChannelUri:(id)arg1;
- (id)getChannelStatsForUri:(id)arg1 andTimeRange:(id)arg2;
- (void)updateHideChannelUpdateSetting:(BOOL)arg1 forChannelUri:(id)arg2;
- (void)updateHideChannelUpdateSettingIfNeeded:(id)arg1;
- (void)updateChannelWithAttributes:(id)arg1;
- (void)requestRefreshChannelStatsForPosts:(id)arg1;
- (id)getChannelStatsLiveMap;
- (id)getOwnedChannelPostForURI:(id)arg1 withLimit:(unsigned int)arg2;
- (void)markChannelAsVisitedWithChannelUri:(id)arg1;
- (void)markChannelAsReadWithChannelUri:(id)arg1;
- (id)getLocalChannelsLiveList;
- (id)getLocalChannels;
- (id)getChannelsLiveMap;
- (id)getChannels;
- (id)getChannelByURI:(id)arg1;
- (id)fetchMoreSearchedChannelResultsByListId:(id)arg1 withLimit:(unsigned int)arg2;
- (id)getSearchedChannelResultsByListId:(id)arg1;
- (id)getChannelSearchQueryLiveList;
- (id)getChannelSearchQueries;
- (int)getCountOfChannelSearchQuery;
- (id)createChannelSearchQuery;
- (void)addQueriesToChannelSearchQuery:(id)arg1 queryId:(id)arg2;
- (void)deleteComment:(id)arg1 post:(id)arg2 channelUri:(id)arg3;
- (void)deletePost:(id)arg1 inChannel:(id)arg2;
- (void)changeIgnoreUpdates:(BOOL)arg1 forChannelUri:(id)arg2;
- (int)getRecentChannelPostsCount;
- (id)getRecentChannelPosts;
- (int)getFeaturedChannelPostsCount;
- (id)getFeaturedChannelPosts;
- (void)clearCommentOnPostNotificationsForChannelUri:(id)arg1 withPostId:(id)arg2;
- (void)clearFavoriteChannelPostNotificationsForChannelUri:(id)arg1;
- (void)markChannelNotificationsAsReadBeforeTimeStamp:(unsigned long long)arg1;
- (void)dismissChannelNotifications:(id)arg1;
- (id)getChannelNotificationsLiveList;
- (void)removeUserAvatar;
- (void)changeUserAvatar:(id)arg1;
- (id)globalUpdatesFilter;
- (id)globalUpdatesSorter;
- (id)getGlobalUpdates;
- (id)getGroups;
- (id)getFileTransfers;
- (id)getPictures;
- (id)updatesForOtherUsersSorted:(BOOL)arg1;
- (id)updatesForCurrentUser:(BOOL)arg1;
- (id)updatesForUser:(id)arg1 sort:(BOOL)arg2;
- (void)removeUserStatus:(id)arg1;
- (void)updateUserStatus:(id)arg1 showBusy:(BOOL)arg2;
- (void)updateUserStatus:(id)arg1 withText:(id)arg2;
- (void)addUserStatusWithText:(id)arg1;
- (id)getUserForUserUri:(id)arg1;
- (id)getDefaultCategoryID;
- (id)getAllCategoryUsersSorted;
- (BOOL)isGlobalsMapCurrent;
- (BOOL)isCategoriesListCurrent;
- (void)renameCategory:(long long)arg1:(id)arg2;
- (void)deleteCategory:(long long)arg1;
- (id)getCategoriesSortedByName;
- (void)moveContactsToCategory:(id)arg1 id:(long long)arg2;
- (id)getCategoryContents:(long long)arg1;
- (id)getCategories;
- (BOOL)hasCategoryWithName:(id)arg1;
- (id)nextCategoryID;
- (long long)createCategory:(id)arg1;
- (BOOL)hasContactOrPendingWithPin:(id)arg1;
- (BOOL)hasContactWithPin:(id)arg1;
- (void)contactAcceptInviteId:(id)arg1 securityAnswer:(id)arg2;
- (id)contactsSorter;
- (void)setBlock:(BOOL)arg1 forContact:(id)arg2 forItemType:(int)arg3;
- (void)setBlock:(BOOL)arg1 forContact:(id)arg2 forRecentUpdateType:(int)arg3;
- (void)setBlockAllUpdates:(BOOL)arg1 forContact:(id)arg2;
- (void)setBlockInvitations:(BOOL)arg1 forContact:(id)arg2;
- (id)getBlockedItemListOfType:(int)arg1;
- (id)getBlockedRecentUpdatesItemsSorted:(BOOL)arg1;
- (id)getBlockedRecentUpdatesItems;
- (id)getBlockedContactInvitationItems;
- (void)contactDeletePendingContactInviteId:(id)arg1;
- (void)contactDeleteInviteId:(id)arg1 ignore:(BOOL)arg2 sendResponse:(BOOL)arg3;
- (void)removeContactWithUser:(id)arg1 ignoreFutureInvitation:(BOOL)arg2;
- (void)contactSendInviteWithPin:(id)arg1 greeting:(id)arg2 displayName:(id)arg3 securityQuestion:(id)arg4 securityAnswer:(id)arg5;
- (void)contactSendInviteWithPin:(id)arg1 qrcodeHash:(id)arg2;
- (id)getPendingContacts;
- (BOOL)isContactsListCurrent;
- (id)getContactsSortedByComposedDisplayName;
- (id)getContacts;
- (void)sendBarcodeScreenStateMessageWithHash:(id)arg1 screenState:(int)arg2;
- (void)sendListChangeMessageWithElements:(id)arg1 fortype:(id)arg2;
- (void)sendListChangeRequestForUserStatus:(id)arg1;
- (void)sendBroadcastMessage:(id)arg1 to:(id)arg2;
- (void)sendListChangeRequestForUserHasNoNewUpdate;
- (void)sendPingMessage:(id)arg1;
- (void)sendWindowStateUpdate:(int)arg1;
@property(nonatomic) BOOL hasNewChannelUpdate;
@property(nonatomic) BOOL hasNewUpdate;
@property(nonatomic) BOOL hasNewMessage;
- (id)getUserDefinedStatus;
- (id)getPredefinedStatuses;
- (id)getTypingUser;
- (id)getAllStatuses;
- (void)setIsKeepingChatHistory:(BOOL)arg1;
- (BOOL)isKeepingChatHistory;
- (id)getTempTransferDirectory;
@property(nonatomic) BOOL hasNewInvite;
- (id)localBbid;
- (id)localPin;
- (id)currentUserStatusMessageAsGlobal;
- (id)currentUserStatusFromGlobal;
- (void)changeCurrentUserKey:(id)arg1 toValue:(id)arg2;
@property(readonly) NSArray *currentUserPins;
@property(readonly) BBMUser *currentUser;
@property(readonly) NSString *currentUserURI;
- (void)sendMarkRecentUpdatesReadMessage:(id)arg1;
- (id)getSetupState;
- (id)getCredentialsState;
- (void)sendBBIDCredentials:(id)arg1 token:(id)arg2 pin:(id)arg3;
- (void)sendChangeUsername:(id)arg1;
- (void)sendSetupDeviceSwitch;
- (void)clearSetupErrors;
@property(readonly, nonatomic) BBMCoreAccessGroup *groupService;
- (void)connection:(id)arg1 didSendJSON:(id)arg2;
- (void)closeConnection;
- (void)startConnection;
- (id)bbgModel;
- (id)offerListener;
- (void)detachOfferListener;
- (void)attachOfferListenerWithCallback:(id)arg1;
- (void)attachDefaultOfferListener;
- (void)removeOffer:(id)arg1;
- (id)getOffers;
- (void)sendAd:(id)arg1 toContacts:(id)arg2 withMessage:(id)arg3;
- (id)adShareManager;
- (void)setHasNewSponsoredInvite:(BOOL)arg1;
- (BOOL)hasNewSponsoredInvite;
- (BOOL)adsEnabled;
- (id)getPostFrequency;
- (id)getAdReportingTime;
- (unsigned int)getNewSponsoredInviteCount;
- (void)createAdLists;
- (id)getAdWithIdentifier:(id)arg1;
- (id)getSharedSponsoredInvites;
- (id)getSharedSponsoredPosts;
- (id)getSponsoredInvites;
- (id)getSponsoredPosts;
- (id)getAllAds;
- (void)clearExpiredAds;
- (void)joinChannelForAd:(id)arg1 channelURI:(id)arg2 context:(int)arg3;
- (void)hideAd:(id)arg1 context:(int)arg2;
- (void)blockSponsor:(id)arg1 context:(int)arg2;
- (void)sendTrackingDataForAd:(id)arg1 action:(int)arg2 context:(int)arg3;
- (void)requestAdWithPosition:(id)arg1;
- (id)getAvailableServerStickerPacks:(id)arg1 updateWithSKProducts:(id)arg2 excludePaidPackWithNoMatchInAppStore:(BOOL)arg3;
- (id)getStickerImage:(id)arg1;
- (id)getStickersForStickerPack:(id)arg1;
- (id)getStickerPacksForIds:(id)arg1;
- (id)getLocalStickerPacks;
- (BOOL)isLocalStickerPackStateCurrent;
- (void)userPurchasedStickerPackId:(id)arg1;
- (void)restoreStickerPacks:(id)arg1;
- (void)sendSticker:(id)arg1:(id)arg2;

@end

