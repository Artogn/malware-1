/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSManagedObject.h"

//#import "QLPreviewControllerDataSource-Protocol.h"
//#import "QLPreviewItem-Protocol.h"
//#import "UIActivityItemSource-Protocol.h"
//#import "WAMediaUploadable-Protocol.h"

@class NSArray, NSData, NSDate, NSNumber, /*NSObject<OS_dispatch_group>, */NSSet, NSString, NSURL, UIImage, WAChatSession, WAGroupMember, WAMediaItem, WAMessageHelper, WAMessageInfo;
/*
@interface WAMessage : NSManagedObject <UIActivityItemSource, WAMediaUploadable, QLPreviewItem, QLPreviewControllerDataSource>
{
    NSObject<OS_dispatch_group> *_locationInfoDispatchGroup;
    NSString *_mediaThumbnailCacheKey;
    NSObject<OS_dispatch_group> *_thumbnailLoadingDispatchGroup;
    int _loadRequestsInProgress;
    UIImage *_loadedThumbnail;
    BOOL _messageSendInProgress;
    struct CGSize _previewAspectRatio;
    NSObject<OS_dispatch_group> *_sendDispatchGroup;
    BOOL _scheduledForRemovalFromSearchIndex;
    WAMessageHelper *_helper;
    BOOL _isMediaInspected;
    BOOL _networkActivity;
    NSURL *_exportedURL;
    BOOL _offlineStorage;
    BOOL _sending;
    BOOL _active;
    BOOL _needsLocalNotification;
    BOOL _sentFromWebClient;
    BOOL _alwaysAutoDownload;
    int _multiSendMediaIndex;
    int _multiSendMediaCount;
    WAMessage *_precedingMessage;
    int _retrySendCount;
    NSString *_transientParticipantJID;
    NSData *_transientXMPPThumbnailData;
}*/
@interface WAMessage (WhatsApp_2_12_14)
+ (id)randomMediaUploadIdentifier;
+ (id)randomMediaEncryptionKey;
+ (id)relativeLibraryPathFromAbsolutePath:(id)arg1;
+ (id)mediaDirectoryForFilename:(id)arg1 JID:(id)arg2;
+ (BOOL)getChatJID:(id *)arg1 stanzaID:(id *)arg2 participant:(id *)arg3 isFromMe:(char *)arg4 fromUniqueKey:(id)arg5;
+ (id)mediaSectionIDUpperBoundForDocumentMessages;
+ (id)mediaSectionIDLowerBoundForDocumentMessages;
+ (id)mediaSectionIDUpperBoundForMediaMessages;
+ (id)mediaSectionIDForMessage:(id)arg1 usingDateFormatter:(id)arg2;
+ (id)dateFormatterForMediaSectionID;
+ (id)mediaBrowserThumbnailForUnknownMedia;
+ (id)mediaThumbnailCache;
+ (void)createNewOutgoingMessageWithPlace:(id)arg1 inChatSession:(id)arg2 completion:(id)arg3;
+ (void)createNewOutgoingMessageWithVideoURL:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 inChatSession:(id)arg6 completion:(id)arg7;
+ (void)createNewOutgoingMessageWithAudioTrack:(id)arg1 inChatSession:(id)arg2 completion:(id)arg3;
+ (void)createNewOutgoingMessageWithDocumentAttachment:(id)arg1 inChatSession:(id)arg2 completion:(id)arg3;
+ (void)createNewOutgoingMessageWithImage:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(int)arg4 count:(int)arg5 inChatSession:(id)arg6 completion:(id)arg7;
+ (void)createNewOutgoingMessageWithMedia:(id)arg1 MIMEType:(id)arg2 caption:(id)arg3 collectionID:(id)arg4 inChatSession:(id)arg5 messageType:(unsigned int)arg6 mediaOrigin:(unsigned int)arg7 completion:(id)arg8;
+ (unsigned int)orphanedMessagesCount;
+ (BOOL)areAllMessages:(id)arg1 ofType:(unsigned int)arg2;
@property(nonatomic) BOOL alwaysAutoDownload; // @synthesize alwaysAutoDownload=_alwaysAutoDownload;
@property(nonatomic, getter=isSentFromWebClient) BOOL sentFromWebClient; // @synthesize sentFromWebClient=_sentFromWebClient;
@property(nonatomic) BOOL needsLocalNotification; // @synthesize needsLocalNotification=_needsLocalNotification;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
@property(retain, nonatomic) NSData *transientXMPPThumbnailData; // @synthesize transientXMPPThumbnailData=_transientXMPPThumbnailData;
@property(copy, nonatomic) NSString *transientParticipantJID; // @synthesize transientParticipantJID=_transientParticipantJID;
@property(nonatomic, getter=isSending) BOOL sending; // @synthesize sending=_sending;
@property(nonatomic) int retrySendCount; // @synthesize retrySendCount=_retrySendCount;
@property(retain, nonatomic) WAMessage *precedingMessage; // @synthesize precedingMessage=_precedingMessage;
@property(nonatomic) int multiSendMediaCount; // @synthesize multiSendMediaCount=_multiSendMediaCount;
@property(nonatomic) int multiSendMediaIndex; // @synthesize multiSendMediaIndex=_multiSendMediaIndex;
//- (void).cxx_destruct;
- (id)previewController:(id)arg1 previewItemAtIndex:(int)arg2;
- (int)numberOfPreviewItemsInPreviewController:(id)arg1;
@property(readonly, nonatomic) NSString *previewItemTitle;
@property(readonly, nonatomic) NSURL *previewItemURL;
@property(readonly, nonatomic) NSSet *recipientsJids;
@property(readonly, nonatomic) NSData *mediaKey;
@property(readonly, copy, nonatomic) NSString *mediaCollectionName;
@property(readonly, nonatomic) int httpRetryCount;
@property(readonly, nonatomic) BOOL isPTT;
@property(readonly, nonatomic) unsigned int mediaType;
@property(copy, nonatomic) NSString *fileHash;
//@property(readonly, nonatomic) id <NSObject><NSCopying> uniqueID;
- (void)copyMediaItemPropertiesForForwardingFromMessage:(id)arg1;
@property(copy, nonatomic) NSString *originalFilename;
@property(copy, nonatomic) NSString *authorName;
@property(readonly, nonatomic) NSString *preferredFilenameForExport;
@property(readonly, nonatomic) NSString *relativeXMPPThumbnailPath;
@property(readonly, nonatomic) NSString *relativeMediaPath;
@property(copy, nonatomic) NSString *vCardString;
@property(copy, nonatomic) NSString *vCardName;
@property(copy, nonatomic) NSString *MIMEType;
@property(retain, nonatomic) NSNumber *movieDuration;
@property(nonatomic) int pageCount;
@property(nonatomic) int mediaHeight;
@property(nonatomic) int mediaWidth;
@property(readonly, nonatomic) BOOL hasValidMediaDimensions;
@property(retain, nonatomic) NSNumber *latitude;
@property(retain, nonatomic) NSNumber *longitude;
@property(retain, nonatomic) NSString *placeDetails;
- (void)generateKeysForMediaEncryptionIfNeeded;
- (void)inspectMediaIfNeeded;
@property(readonly, nonatomic) NSString *xmppThumbnailPath;
@property(readonly, copy, nonatomic) NSString *mediaPath;
@property(nonatomic) BOOL networkActivity;
- (void)internalSetNetworkActivity:(BOOL)arg1;
- (void)performBlockAfterSendMessageAttempt:(id)arg1;
- (void)markSendAsCompletedIfNecessary;
- (void)markSendAsStartedIfNecessary;
@property(readonly, nonatomic) BOOL containsUndownloadedMedia;
@property(readonly, nonatomic) BOOL storesMediaExternally;
@property(readonly, copy, nonatomic) NSString *uniqueKey;
@property(readonly, copy, nonatomic) NSString *participantJID;
@property(readonly, copy, nonatomic) NSString *senderJID;
- (void)unsetFlag:(unsigned int)arg1;
- (void)setFlag:(unsigned int)arg1;
- (BOOL)hasFlag:(unsigned int)arg1;
@property(nonatomic, getter=isBroadcast) BOOL broadcast;
@property(retain, nonatomic) NSNumber *messageStatus; // @dynamic messageStatus;
@property(nonatomic) BOOL offlineStorage; // @synthesize offlineStorage=_offlineStorage;
- (void)willSave;
- (void)generateMediaThumbnailCacheKey;
@property(readonly, nonatomic) WAMessageHelper *helper;
- (id)fromFullName;
- (id)fromName;
- (void)updateMediaSectionID;
@property(readonly, copy, nonatomic) NSArray *changedKeyPaths;
- (void)didTurnIntoFault;
- (void)awakeFromInsert;
- (void)awakeFromFetch;
@property(readonly, nonatomic) int searchEngineDocumentType;
@property(readonly, copy, nonatomic) NSString *textForSearchIndex;
@property(readonly, nonatomic) float searchQualityScore;
- (id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (void)fetchRequiredDataForWAPlace:(id)arg1 withCompletion:(id)arg2;
- (id)mediaPathForIncomingMediaWithFilename:(id)arg1;
- (id)uniqueMediaPathWithPathExtension:(id)arg1;
@property(readonly, nonatomic) NSString *mediaBrowserThumbnailPath;
@property(readonly, copy, nonatomic) NSString *stringRepresentationForVoiceOver;
@property(readonly, copy, nonatomic) NSString *stringRepresentationForNotification;
@property(readonly, copy, nonatomic) NSString *stringRepresentationForChat;
@property(readonly, copy, nonatomic) NSString *stringRepresentation;
- (void)endRetainingCachedImages;
- (void)beginRetainingCachedImages;
- (void)setHighQualityImage:(id)arg1;
- (void)requestImageWithQuality:(unsigned int)arg1 options:(unsigned int)arg2 resultHandler:(id)arg3;
@property(readonly, nonatomic) struct CGSize preferredPreviewAspectRatio;
- (void)generateMediaBrowserThumbnailWithCompletionHandler:(id)arg1;
- (void)fetchMediaBrowserThumbnailWithCompletionHandler:(id)arg1;
- (id)cachedMediaBrowserThumbnail;
- (void)sendServerErrorReceiptIfNeeded;
- (void)updateReceiptInfoFrom:(id)arg1 status:(unsigned int)arg2 date:(id)arg3;
- (void)updateMediaLocalPathWithAbsolutePath:(id)arg1;
- (void)replaceMediaWithMediaAtPath:(id)arg1;
- (void)updateWithLocation:(id)arg1;
- (void)attachXMPPThumbnailData:(id)arg1 completion:(id)arg2;
- (void)attachMediaAtPath:(id)arg1 completion:(id)arg2;
- (id)incomingFilePathForFileType:(id)arg1;
- (void)populateChildMessage:(id)arg1;
- (id)addChildMessagesIfNeeded;
@property(readonly, copy, nonatomic) NSString *starIcon;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@property(readonly, nonatomic) BOOL needsResend;
@property(readonly, nonatomic) BOOL canBeForwarded;
@property(readonly, nonatomic, getter=isEligibleForUnreadMessages) BOOL eligibleForUnreadMessages;
@property(readonly, nonatomic, getter=isEligibleToResortChats) BOOL eligibleToResortChats;
@property(readonly, nonatomic, getter=isEligibleForNotification) BOOL eligibleForNotification;
- (void)prepareXMPPThumbnailWithBaseImage:(id)arg1 filename:(id)arg2 completion:(id)arg3;
- (void)prepareXMPPThumbnailWithFilename:(id)arg1 completion:(id)arg2;

// Remaining properties
@property(retain, nonatomic) WAChatSession *chatSession; // @dynamic chatSession;
@property(retain, nonatomic) NSSet *childMessages; // @dynamic childMessages;
@property(retain, nonatomic) NSNumber *childMessagesDeliveredCount; // @dynamic childMessagesDeliveredCount;
@property(retain, nonatomic) NSNumber *childMessagesPlayedCount; // @dynamic childMessagesPlayedCount;
@property(retain, nonatomic) NSNumber *childMessagesReadCount; // @dynamic childMessagesReadCount;
@property(retain, nonatomic) NSNumber *dataItemVersion; // @dynamic dataItemVersion;
@property(retain, nonatomic) NSSet *dataItems; // @dynamic dataItems;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSNumber *docID; // @dynamic docID;
@property(retain, nonatomic) NSNumber *encRetryCount; // @dynamic encRetryCount;
@property(retain, nonatomic) NSNumber *filteredRecipientCount; // @dynamic filteredRecipientCount;
@property(retain, nonatomic) NSNumber *flags; // @dynamic flags;
@property(retain, nonatomic) NSString *fromJID; // @dynamic fromJID;
@property(retain, nonatomic) NSNumber *groupEventType; // @dynamic groupEventType;
@property(retain, nonatomic) WAGroupMember *groupMember; // @dynamic groupMember;
@property(readonly) unsigned int hash;
@property(retain, nonatomic) NSNumber *isFromMe; // @dynamic isFromMe;
@property(retain, nonatomic) WAMediaItem *mediaItem; // @dynamic mediaItem;
@property(retain, nonatomic) NSString *mediaSectionID; // @dynamic mediaSectionID;
@property(retain, nonatomic) NSDate *messageDate; // @dynamic messageDate;
@property(retain, nonatomic) NSNumber *messageErrorStatus; // @dynamic messageErrorStatus;
@property(retain, nonatomic) WAMessageInfo *messageInfo; // @dynamic messageInfo;
@property(retain, nonatomic) NSNumber *messageType; // @dynamic messageType;
@property(retain, nonatomic) WAMessage *parentMessage; // @dynamic parentMessage;
@property(retain, nonatomic) NSString *phash; // @dynamic phash;
@property(retain, nonatomic) NSString *pushName; // @dynamic pushName;
@property(retain, nonatomic) NSDate *sentDate; // @dynamic sentDate;
@property(retain, nonatomic) NSNumber *sort; // @dynamic sort;
@property(retain, nonatomic) NSNumber *spotlightStatus; // @dynamic spotlightStatus;
@property(retain, nonatomic) NSString *stanzaID; // @dynamic stanzaID;
@property(nonatomic) BOOL starred; // @dynamic starred;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *text; // @dynamic text;
@property(retain, nonatomic) NSString *toJID; // @dynamic toJID;

@end

