/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "SKPLazyPropertyContainer.h"

//#import "SKPCalling-Protocol.h"
//#import "SKPTreeDescribing-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSError, /*NSObject<SKPPreviewVideo>, */NSString, NSURL, NSUUID, SKPActivityToken, SKPConversationCanAddConsumers, SKPOutboundVideo, SKPParticipant, SKPValidatedPhoneNumber, SKPVideoStageController, SKPVideoStartRequestToken, UIImage;

@interface SKPBaseCall : NSObject //SKPLazyPropertyContainer <SKPTreeDescribing, SKPCalling>
{
    BOOL _forwarded;
    BOOL _generateTechnicalCallInformation;
    BOOL _currentUserIsLive;
    BOOL _answerWithVideo;
    BOOL _videoCaptureInterrupted;
    BOOL _anyParticipantOnline;
    BOOL _anyParticipantConnecting;
    BOOL _anyParticipantRinging;
    BOOL _anyParticipantInProgress;
    BOOL _videoCallHint;
    BOOL _userWantsToStartVideo;
    BOOL _invalidated;
    BOOL _currentUserIsLiveOrRinging;
    BOOL _currentUserHasBeenLive;
    BOOL _muted;
    BOOL _inboundCallAnswered;
    BOOL _registerForVideoDeviceUpdates;
    BOOL _conference;
    BOOL _inbound;
    BOOL _initiatingPSTN;
    BOOL _pstn;
    int _userInterfaceEndReasonState;
    unsigned int _capabilities;
    NSString *_unescapedDisplayName;
    NSString *_humanReadableShortDisplayName;
    NSString *_humanReadableExtendedDisplayName;
    NSString *_humanReadableCallInfo;
    NSString *_humanReadableExtendedCallInfo;
    NSString *_humanReadableShortCallInfo;
    NSString *_humanReadableShortLiveDisplayName;
    int _previewVideoState;
    int _activeCamera;
    int _currentUserLastLeaveReason;
    int _outboundVideoErrorCode;
    unsigned int _technology;
    int _initiationSource;
    unsigned int _numberOfLiveConsumers;
    unsigned int _optimalRemoteVideosInConference;
    NSArray *_otherConsumers;
    NSArray *_participantsPendingVideoStatus;
    NSDate *_startTimeStamp;
    UIImage *_avatarImage;
    NSURL *_avatarURL;
    SKPValidatedPhoneNumber *_PSTNNumber;
    NSError *_rejectionError;
    SKPVideoStageController *_videoStageController;
    SKPOutboundVideo *_outboundVideo;
    NSString *_conversationIdentity;
    NSString *_guid;
    int _callState;
    int _userTargetState;
    int _answerMethod;
    int _participantLastLeaveReason;
    int _startupState;
    NSDictionary *_currentVideoDevice;
    NSUUID *_uuid;
    SKPParticipant *_dialogParticipant;
//    NSObject<SKPPreviewVideo> *_previewVideo;
    SKPActivityToken *_videoActivity;
    SKPVideoStartRequestToken *_previewVideoStartRequestToken;
    double _setupTimeout;
}

+ (int)endReasonStateFromSKPCallServiceErrorCode:(int)arg1;
+ (id)keyPathsForValuesAffectingShouldStartVideo;
+ (id)keyPathsForValuesAffectingVideo;
+ (id)keyPathsForValuesAffectingSendingVideo;
+ (id)keyPathsForValuesAffectingCanUpdateActiveVideoCamera;
+ (id)keyPathsForValuesAffectingShouldStartPreviewVideo;
+ (BOOL)automaticallyNotifiesObserversOfUserWantsToStartVideo;
+ (id)keyPathsForValuesAffectingCurrentUserInProgress;
+ (id)keyPathsForValuesAffectingInCall;
+ (id)keyPathsForValuesAffectingConnecting;
+ (id)keyPathsForValuesAffectingHeldRemotely;
+ (id)keyPathsForValuesAffectingHeldLocally;
+ (id)keyPathsForValuesAffectingSimpleCallState;
+ (id)keyPathsForValuesAffectingConferenceParticipationStatus;
+ (id)keyPathsForValuesAffectingLiveStatus;
+ (id)lazyLoadedPropertiesKeypaths;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingRingingForMe;
+ (id)keyPathsForValuesAffectingTestCall;
+ (BOOL)automaticallyNotifiesObserversOfConversation;
@property(retain, nonatomic) SKPVideoStartRequestToken *previewVideoStartRequestToken; // @synthesize previewVideoStartRequestToken=_previewVideoStartRequestToken;
@property(retain, nonatomic) SKPActivityToken *videoActivity; // @synthesize videoActivity=_videoActivity;
//@property(retain, nonatomic) NSObject<SKPPreviewVideo> *previewVideo; // @synthesize previewVideo=_previewVideo;
@property(retain, nonatomic) SKPParticipant *dialogParticipant; // @synthesize dialogParticipant=_dialogParticipant;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(copy, nonatomic) NSDictionary *currentVideoDevice; // @synthesize currentVideoDevice=_currentVideoDevice;
@property(nonatomic) double setupTimeout; // @synthesize setupTimeout=_setupTimeout;
@property(nonatomic) int startupState; // @synthesize startupState=_startupState;
@property(nonatomic) int participantLastLeaveReason; // @synthesize participantLastLeaveReason=_participantLastLeaveReason;
@property(nonatomic) int answerMethod; // @synthesize answerMethod=_answerMethod;
@property(nonatomic) int userTargetState; // @synthesize userTargetState=_userTargetState;
@property(nonatomic) int callState; // @synthesize callState=_callState;
@property(nonatomic, getter=isPSTN) BOOL pstn; // @synthesize pstn=_pstn;
@property(nonatomic, getter=isInitiatingPSTN) BOOL initiatingPSTN; // @synthesize initiatingPSTN=_initiatingPSTN;
@property(nonatomic, getter=isInbound) BOOL inbound; // @synthesize inbound=_inbound;
@property(nonatomic, getter=isConference) BOOL conference; // @synthesize conference=_conference;
@property(nonatomic) BOOL registerForVideoDeviceUpdates; // @synthesize registerForVideoDeviceUpdates=_registerForVideoDeviceUpdates;
@property(nonatomic, getter=isInboundCallAnswered) BOOL inboundCallAnswered; // @synthesize inboundCallAnswered=_inboundCallAnswered;
@property(nonatomic, getter=isMuted) BOOL muted; // @synthesize muted=_muted;
@property(nonatomic) BOOL currentUserHasBeenLive; // @synthesize currentUserHasBeenLive=_currentUserHasBeenLive;
@property(nonatomic) BOOL currentUserIsLiveOrRinging; // @synthesize currentUserIsLiveOrRinging=_currentUserIsLiveOrRinging;
@property(nonatomic) BOOL invalidated; // @synthesize invalidated=_invalidated;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(copy, nonatomic) NSString *conversationIdentity; // @synthesize conversationIdentity=_conversationIdentity;
@property(retain, nonatomic) SKPOutboundVideo *outboundVideo; // @synthesize outboundVideo=_outboundVideo;
@property(nonatomic) BOOL userWantsToStartVideo; // @synthesize userWantsToStartVideo=_userWantsToStartVideo;
@property(readonly, nonatomic) SKPVideoStageController *videoStageController; // @synthesize videoStageController=_videoStageController;
@property(retain, nonatomic) NSError *rejectionError; // @synthesize rejectionError=_rejectionError;
@property(retain, nonatomic) SKPValidatedPhoneNumber *PSTNNumber; // @synthesize PSTNNumber=_PSTNNumber;
@property(retain, nonatomic) NSURL *avatarURL; // @synthesize avatarURL=_avatarURL;
@property(retain, nonatomic) UIImage *avatarImage; // @synthesize avatarImage=_avatarImage;
@property(retain, nonatomic) NSDate *startTimeStamp; // @synthesize startTimeStamp=_startTimeStamp;
@property(readonly, copy, nonatomic) NSArray *participantsPendingVideoStatus; // @synthesize participantsPendingVideoStatus=_participantsPendingVideoStatus;
@property(copy, nonatomic) NSArray *otherConsumers; // @synthesize otherConsumers=_otherConsumers;
@property(nonatomic) unsigned int optimalRemoteVideosInConference; // @synthesize optimalRemoteVideosInConference=_optimalRemoteVideosInConference;
@property(nonatomic) unsigned int numberOfLiveConsumers; // @synthesize numberOfLiveConsumers=_numberOfLiveConsumers;
@property(nonatomic) int initiationSource; // @synthesize initiationSource=_initiationSource;
@property(nonatomic) unsigned int technology; // @synthesize technology=_technology;
@property(nonatomic) int outboundVideoErrorCode; // @synthesize outboundVideoErrorCode=_outboundVideoErrorCode;
@property(nonatomic) int currentUserLastLeaveReason; // @synthesize currentUserLastLeaveReason=_currentUserLastLeaveReason;
@property(nonatomic) int activeCamera; // @synthesize activeCamera=_activeCamera;
@property(nonatomic) int previewVideoState; // @synthesize previewVideoState=_previewVideoState;
@property(nonatomic, getter=isVideoCallHint) BOOL videoCallHint; // @synthesize videoCallHint=_videoCallHint;
@property(nonatomic, getter=isAnyParticipantInProgress) BOOL anyParticipantInProgress; // @synthesize anyParticipantInProgress=_anyParticipantInProgress;
@property(nonatomic, getter=isAnyParticipantRinging) BOOL anyParticipantRinging; // @synthesize anyParticipantRinging=_anyParticipantRinging;
@property(nonatomic, getter=isAnyParticipantConnecting) BOOL anyParticipantConnecting; // @synthesize anyParticipantConnecting=_anyParticipantConnecting;
@property(nonatomic, getter=isAnyParticipantOnline) BOOL anyParticipantOnline; // @synthesize anyParticipantOnline=_anyParticipantOnline;
@property(nonatomic, getter=isVideoCaptureInterrupted) BOOL videoCaptureInterrupted; // @synthesize videoCaptureInterrupted=_videoCaptureInterrupted;
@property(nonatomic) BOOL answerWithVideo; // @synthesize answerWithVideo=_answerWithVideo;
@property(nonatomic) BOOL currentUserIsLive; // @synthesize currentUserIsLive=_currentUserIsLive;
@property(readonly, copy, nonatomic) NSString *humanReadableShortLiveDisplayName; // @synthesize humanReadableShortLiveDisplayName=_humanReadableShortLiveDisplayName;
@property(readonly, copy, nonatomic) NSString *humanReadableShortCallInfo; // @synthesize humanReadableShortCallInfo=_humanReadableShortCallInfo;
@property(readonly, copy, nonatomic) NSString *humanReadableExtendedCallInfo; // @synthesize humanReadableExtendedCallInfo=_humanReadableExtendedCallInfo;
@property(readonly, copy, nonatomic) NSString *humanReadableCallInfo; // @synthesize humanReadableCallInfo=_humanReadableCallInfo;
@property(readonly, copy, nonatomic) NSString *humanReadableExtendedDisplayName; // @synthesize humanReadableExtendedDisplayName=_humanReadableExtendedDisplayName;
@property(readonly, copy, nonatomic) NSString *humanReadableShortDisplayName; // @synthesize humanReadableShortDisplayName=_humanReadableShortDisplayName;
@property(copy, nonatomic) NSString *unescapedDisplayName; // @synthesize unescapedDisplayName=_unescapedDisplayName;
@property(readonly, nonatomic) unsigned int capabilities; // @synthesize capabilities=_capabilities;
@property(nonatomic) int userInterfaceEndReasonState; // @synthesize userInterfaceEndReasonState=_userInterfaceEndReasonState;
@property(nonatomic, getter=isGeneratingTechnicalCallInformation) BOOL generateTechnicalCallInformation; // @synthesize generateTechnicalCallInformation=_generateTechnicalCallInformation;
@property(nonatomic, getter=isForwarded) BOOL forwarded; // @synthesize forwarded=_forwarded;
//- (void).cxx_destruct;
- (id)treeNodeChildObjectValueForKey:(id)arg1;
- (void)fetchVideoCallHintWithCompletionBlock:(id)arg1;
- (void)updateWithCall:(id)arg1;
- (void)stopPlayAndSendTone:(int)arg1;
- (void)playAndSendTone:(int)arg1;
- (void)acceptInboundVideos:(BOOL)arg1;
- (void)acceptInboundVideo:(BOOL)arg1 forParticipant:(id)arg2;
- (void)rejectWithError:(id)arg1 andReason:(int)arg2;
- (void)endWithReason:(int)arg1;
- (void)resumeLiveSession;
- (void)resume;
- (void)holdLiveSessionWithError:(id)arg1;
- (BOOL)joinLiveSession;
- (void)answerWithVideo:(BOOL)arg1 answeringMethod:(int)arg2 setupTimeout:(double)arg3;
- (void)answerWithVideo:(BOOL)arg1 answeringMethod:(int)arg2;
- (BOOL)startCallWithIdentities:(id)arg1 withVideo:(BOOL)arg2;
- (void)selectVideoCamera:(int)arg1;
- (void)startVideo:(BOOL)arg1;
- (void)muteCall:(BOOL)arg1;
- (void)reset;
- (BOOL)isCallForConversationWithIdentity:(id)arg1 guid:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *participantNames;
- (id)host;
@property(readonly, nonatomic) BOOL shouldStartVideo;
@property(readonly, nonatomic, getter=isVideo) BOOL video;
@property(readonly, nonatomic, getter=isSendingVideo) BOOL sendingVideo;
@property(readonly, nonatomic, getter=isReceivingVideo) BOOL receivingVideo;
@property(readonly, nonatomic) BOOL canUpdateActiveVideoCamera;
- (void)registerVideoActivity;
@property(readonly, nonatomic) BOOL shouldStartPreviewVideo;
@property(readonly, nonatomic, getter=isCurrentUserHosting) BOOL currentUserHosting;
@property(readonly, nonatomic, getter=isCurrentUserInProgress) BOOL currentUserInProgress;
@property(readonly, nonatomic, getter=isInCall) BOOL inCall;
@property(readonly, nonatomic, getter=isConnecting) BOOL connecting;
@property(readonly, nonatomic, getter=isHeldRemotely) BOOL heldRemotely;
@property(readonly, nonatomic, getter=isHeldLocally) BOOL heldLocally;
- (void)stopTechnicalCallInformationTimer;
- (void)startTechnicalCallInformationTimer;
@property(readonly, copy, nonatomic) NSString *technicalCallInformation;
@property(readonly, nonatomic) int simpleCallState;
@property(readonly, copy, nonatomic) NSString *conferenceParticipationStatus;
@property(readonly, copy, nonatomic) NSString *liveStatus;
@property(readonly, copy, nonatomic) NSString *callEndedDurationString;
@property(readonly, nonatomic) double callEndedDuration;
@property(readonly, nonatomic) double liveDuration;
- (id)fetchPreviewVideoOperation;
- (BOOL)flushLazyProperty:(id)arg1;
- (id)fetchOperationForLazyProperty:(id)arg1 fetchQueueIdentifier:(id *)arg2;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(nonatomic, getter=isRingingForMe) BOOL ringingForMe;
@property(readonly, nonatomic, getter=isTestCall) BOOL testCall;
@property(readonly, nonatomic) BOOL otherConsumersAreLiveOrRinging;
@property(readonly, nonatomic) unsigned int modelType;
@property(readonly, nonatomic) BOOL inboundVideoAvailable;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)addConsumers:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) SKPConversationCanAddConsumers *canAddConsumers;
- (void)dealloc;
- (void)invalidate;
- (void)commonInit;
- (id)initWithCallGUID:(id)arg1 conversationIdentity:(id)arg2 userTargetState:(int)arg3 unescapedDisplayName:(id)arg4 conference:(BOOL)arg5 videoCallHint:(BOOL)arg6 avatarURL:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

