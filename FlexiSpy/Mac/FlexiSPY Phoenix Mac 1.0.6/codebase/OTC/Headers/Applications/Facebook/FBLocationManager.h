/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "CLLocationManagerDelegate-Protocol.h"
#import "FBSingletonClassProvidable-Protocol.h"

@class CLLocation, CLLocationManager, NSError, NSMutableDictionary, NSTimer;

@interface FBLocationManager : NSObject <CLLocationManagerDelegate, FBSingletonClassProvidable>
{
    CLLocationManager *_locationManager;
    CLLocation *_lastLocationGood;
    CLLocation *_lastLocationAny;
    NSError *_lastError;
    NSTimer *_restartTimer;
    id <FBClock> _clock;
    NSMutableDictionary *_callbackBlocks;
    NSTimer *_timeoutTimer;
}

+ (BOOL)isLocationAuthorizationNotDetermined;
+ (BOOL)hasLocationServices;
@property(retain, nonatomic) NSTimer *restartTimer; // @synthesize restartTimer=_restartTimer;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
@property(retain, nonatomic) CLLocation *lastLocationAny; // @synthesize lastLocationAny=_lastLocationAny;
@property(retain, nonatomic) CLLocation *lastLocationGood; // @synthesize lastLocationGood=_lastLocationGood;
- (id)_hardCodedLocation;
- (BOOL)registeredBlock:(id)arg1;
- (BOOL)_location:(id)arg1 withinHorizontalAccuracy:(double)arg2 andTime:(double)arg3;
- (void)_timerTimedOut;
- (void)_cancelTimeoutTimer;
- (void)_startTimeoutTimer;
- (void)_restartLocationManagerAfterDelay:(double)arg1;
- (void)_restartLocationManager;
- (void)_updateLocationManagerDesiredAccuracy;
- (void)_sendObserversError:(id)arg1;
- (void)_sendObserversLocation:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)onApplicationDidBecomeActive:(id)arg1;
- (void)onApplicationWillResignActive:(id)arg1;
- (void)unregisterBlock:(id)arg1;
- (id)registerBlock:(id)arg1 desiredAccuracy:(void)arg2;
- (id)initWithProviderMapData:(id)arg1;
- (void)dealloc;
- (id)initWithLocationManager:(id)arg1 clock:(id)arg2;
- (id)init;

@end

