//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Apr  4 2016 10:44:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WAChatStorage.h"

@class NSString;

@interface WAChatStorage (MainApp)
+ (id)errorWithDescription:(id)arg1 failureReason:(id)arg2;
+ (void)wa_didUpgradeFrom:(id)arg1 to:(id)arg2;
- (id)outgoingMessageWithSharedItem:(id)arg1;
- (id)outgoingMessagesInSharedItemOutbox:(id)arg1;
- (unsigned long long)countOfMessages;
- (id)tarFilePathsOfTypes:(id)arg1 shouldCancel:(id)arg2;
- (id)thumbnailFilePathsShouldCancel:(id)arg1;
- (id)filePathsForProperties:(id)arg1 ofTypes:(id)arg2 shouldCancel:(id)arg3;
- (id)estimatedVideoUploadSize;
- (void)calculatePotentialBackupSize:(id)arg1;
- (unsigned long long)calculateDocumentTARExpectedSizeWithItemCount:(unsigned long long)arg1;
- (long long)calculateThumbnailTARExpectedSizeForSmallItemCount:(unsigned long long)arg1 largeItemCount:(unsigned long long)arg2 documentItemCount:(unsigned long long)arg3;
- (long long)calculateVideoTARExpectedSizeWithItemCount:(unsigned long long)arg1;
- (long long)calculateMediaTARExpectedSizeWithItemCount:(unsigned long long)arg1;
- (long long)calculateStandardTarSizeForCount:(unsigned long long)arg1;
- (void)calculateDatabaseSizes:(id)arg1;
- (unsigned long long)sizeForMediaOfType:(int)arg1 inContext:(id)arg2 forJID:(id)arg3 excludeBroadcast:(_Bool)arg4;
- (unsigned long long)sizeForMediaOfType:(int)arg1 forJID:(id)arg2 excludeBroadcast:(_Bool)arg3;
- (void)finishProcessingRemainingMessages;
- (void)e2eIdentityChanged:(id)arg1;
- (void)addE2EIndentityChangeEventToChatSession:(id)arg1 groupMember:(id)arg2;
- (void)addE2ELockMessageToChatSessionsWithJIDs:(id)arg1;
- (void)addE2ELockMessageToChatSession:(id)arg1;
- (void)postIdentityVerifiedUpgradeNotificationForJids:(id)arg1;
- (void)upgradeChatSession:(id)arg1 toIdentityVerificationState:(short)arg2 onMessageSend:(_Bool)arg3;
- (void)resetVerificationStateChecksForAllChats;
- (void)debug_resetIdentityVerificationLockForAllChats;
- (void)saveBlockedJIDs:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)useBestLocationResult:(id)arg1;
- (void)stopLocationManagerIfPossible;
- (void)startLocationManagerIfNecessary;
- (void)locationUpdatesRequestExpired;
- (void)stopGroupLocationSharing;
- (void)startGroupLocationSharingForDuration:(double)arg1;
- (void)locationRequestFailedWithError:(id)arg1 userInfo:(id)arg2;
- (void)locationRequestFinishedWithLocation:(id)arg1 userInfo:(id)arg2;
- (void)requestLocationWithCallbackDictionary:(id)arg1;
- (void)requestLocationForMessage:(id)arg1;
- (void)resendPendingReceipts;
- (void)debug_deleteAllOrphanedMessagesNow;
- (id)replaceChatSessionWithEmptySession:(id)arg1;
- (void)didBulkDeleteMessagesInChatSession:(id)arg1 beforeDate:(id)arg2 includingStarredMessages:(_Bool)arg3 fromWebClient:(_Bool)arg4;
- (void)deleteMessages:(id)arg1 inChatSession:(id)arg2 fromWebClient:(_Bool)arg3;
- (void)deleteAllMessagesInSession:(id)arg1;
- (void)clearAllChatSessions;
- (void)clearChatSession:(id)arg1;
- (void)deleteAllChatSessions;
- (void)deleteChatSession:(id)arg1 fromWebClient:(_Bool)arg2;
- (void)deleteChatSession:(id)arg1;
- (id)receivedMessagesWithStanzaID:(id)arg1;
- (id)receivedVoiceMessagesWithStanzaID:(id)arg1;
- (void)reportFieldStatsForSentMessage:(id)arg1 sentSuccess:(_Bool)arg2;
- (void)changeStatus:(int)arg1 forOutgoingMessages:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 userData:(id)arg5 playSound:(out _Bool *)arg6;
- (void)changeStatus:(int)arg1 forOutgoingMessagesWithStanzaIDs:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 userData:(id)arg5 playSound:(out _Bool *)arg6;
- (void)changeStatus:(int)arg1 forIncomingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4;
- (void)storeModifiedMessage:(id)arg1 notify:(_Bool)arg2;
- (void)updateChatSessionWithMessage:(id)arg1;
- (void)sendVCard:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3;
- (void)sendPlace:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3 completion:(id)arg4;
- (void)sendMessageWithMedia:(id)arg1;
- (id)messageWithAudioFilePath:(id)arg1 quotedMessage:(id)arg2 inChatSession:(id)arg3 origin:(int)arg4 durationSeconds:(long long)arg5 doNotUpload:(_Bool)arg6 streaming:(_Bool)arg7 voicemail:(_Bool)arg8 streamingHash:(id)arg9 mediaKey:(id)arg10 error:(out id *)arg11;
- (void)sendDocumentAttachment:(id)arg1 replyingToMessage:(id)arg2 inChatSession:(id)arg3 completion:(id)arg4;
- (void)sendVideoAtURL:(id)arg1 isGIF:(_Bool)arg2 caption:(id)arg3 collectionID:(id)arg4 index:(long long)arg5 count:(long long)arg6 replyingToMessage:(id)arg7 inChatSession:(id)arg8 completion:(id)arg9;
- (void)sendVideoAtURL:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(long long)arg4 count:(long long)arg5 replyingToMessage:(id)arg6 inChatSession:(id)arg7 completion:(id)arg8;
- (void)sendMessageWithImage:(id)arg1 caption:(id)arg2 collectionID:(id)arg3 index:(long long)arg4 count:(long long)arg5 replyingToMessage:(id)arg6 inChatSession:(id)arg7 completion:(id)arg8;
- (void)sendMessageWithImage:(id)arg1 caption:(id)arg2 replyingToMessage:(id)arg3 inChatSession:(id)arg4 completion:(id)arg5;
- (id)sendMessageWithText:(id)arg1 metadata:(id)arg2 replyingToMessage:(id)arg3 inChatSession:(id)arg4;
- (_Bool)isChatSessionForExistingUser:(id)arg1;
- (void)forwardMessages:(id)arg1 toChatSession:(id)arg2;
- (void)retrySendingMessage:(id)arg1;
- (void)sendMessage:(id)arg1 notify:(_Bool)arg2;
- (void)resendAllServerErrorReceiptsWithoutAck;
- (void)receivedServerErrorForStanzaIDs:(id)arg1 fromJID:(id)arg2 participantJID:(id)arg3;
- (void)receivedServerErrorAckForStanzaID:(id)arg1 fromJID:(id)arg2 participantJID:(id)arg3;
- (id)sentMessagesWithStanzaIDs:(id)arg1 jid:(id)arg2;
- (id)sentMessagesWithStanzaID:(id)arg1 jid:(id)arg2;
- (void)receiveError:(id)arg1 forMessage:(id)arg2;
- (id)groupMembersWithJIDs:(id)arg1;
- (_Bool)findContactInContext:(id)arg1 forChatSession:(id)arg2;
- (void)updateChatSessionWithContactData:(id)arg1;
- (void)internalReceiveChatMessages:(id)arg1 completion:(id)arg2;
- (void)receiveChatMessages:(id)arg1 completion:(id)arg2;
- (void)addMessage:(id)arg1 fromGroupMember:(id)arg2 toChatSession:(id)arg3 completion:(id)arg4;
- (void)callLoggerDidAddEvent:(id)arg1;
- (id)outgoingMessageTemplateForSession:(id)arg1 withMedia:(_Bool)arg2;
- (id)messagePlaceholderForStanza:(id)arg1;
- (void)updateMessage:(id)arg1 withDataFromE2eMessage:(id)arg2;
- (void)updateMessage:(id)arg1 withDataFromStanza:(id)arg2;
- (void)setChatSession:(id)arg1 archived:(_Bool)arg2 notifyWebClient:(_Bool)arg3 saveChanges:(_Bool)arg4;
- (void)setChatSession:(id)arg1 archived:(_Bool)arg2;
- (void)setAllChatSessionsArchived:(_Bool)arg1;
- (id)createChatSessionForContact:(id)arg1 JID:(id)arg2 eligibleForDeletionIfEmpty:(_Bool)arg3;
- (id)createChatSessionForContact:(id)arg1 JID:(id)arg2;
- (id)createChatSessionForContact:(id)arg1 JID:(id)arg2 eligibleForDeletionIfEmpty:(_Bool)arg3 hidden:(_Bool)arg4;
- (id)newChatSessionWithJID:(id)arg1;
- (id)newOrExistingChatSessionForJID:(id)arg1;
- (id)messageWithStanzaID:(id)arg1 participant:(id)arg2 isFromMe:(_Bool)arg3 inChatSession:(id)arg4;
- (id)messageWithStanzaID:(id)arg1 participant:(id)arg2 isFromMe:(_Bool)arg3 inChatSessionWithJID:(id)arg4;
- (id)messageWithStanzaID:(id)arg1 isFromMe:(_Bool)arg2 inChatSession:(id)arg3;
- (id)messageWithStanzaID:(id)arg1 isFromMe:(_Bool)arg2 inChatSessionWithJID:(id)arg3;
- (id)messagesWithStanzaID:(id)arg1 inChatSession:(id)arg2;
- (id)refetchAllMessages:(id)arg1;
- (id)messageWithID:(id)arg1 inContext:(id)arg2;
- (id)messageWithID:(id)arg1;
- (id)receivedMessagesWithStanzaIDs:(id)arg1;
- (unsigned long long)countOfMessagesAfterMessage:(id)arg1;
- (id)unreadMessagesForSession:(id)arg1 startOffset:(unsigned long long)arg2;
- (id)messagesForSession:(id)arg1 startOffset:(unsigned long long)arg2 limit:(unsigned long long)arg3 saveBeforeFetch:(_Bool)arg4;
- (long long)compareNumberOfMessagesInChatSession:(id)arg1 withNumber:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool hasUnarchivedChatSessions;
@property(readonly, nonatomic) _Bool hasArchivedChatSessions;
@property(readonly, nonatomic) unsigned long long archivedChatSessionsCount;
@property(readonly, nonatomic) _Bool hasChatSessions;
@property(readonly, nonatomic) _Bool hasChatMessages;
- (_Bool)chatSessionsWithJIDsContainMessages:(id)arg1;
- (id)existingChatSessionsForJIDs:(id)arg1 prefetchingLastMessage:(_Bool)arg2;
- (id)existingChatSessionsForContact:(id)arg1 includeLinkedContacts:(_Bool)arg2;
- (id)chatSessionWithObjectID:(id)arg1;
- (id)chatSessionsForContactsUpdateInContext:(id)arg1;
- (void)xmppConnectionStateDidChange:(id)arg1;
- (void)mediaDownloadPolicyDidChange:(id)arg1;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)reportChatsFieldStatsIfNeeded;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5;
- (void)controllerWillChangeContent:(id)arg1;
- (void)setUpFetchedResultsControllers;
- (void)markAsCorrupted;
- (void)changeAfterRestore;
- (void)deleteStorage;
- (void)workerMOCDidSave:(id)arg1;
- (void)saveContextAndMergeChanges:(id)arg1 completion:(id)arg2;
- (void)delayedSave;
- (void)checkMOCForObjectsWithTemporaryIDs:(id)arg1;
- (void)saveMainMOCOnly;
- (void)saveMainMOCPendingFullSave;
- (void)internalSaveWithCompletionHandler:(id)arg1;
- (void)saveUnconditionally:(_Bool)arg1 completion:(id)arg2;
- (void)saveWithCompletionHandler:(id)arg1;
- (_Bool)canSaveContext:(id)arg1;
- (void)saveAndWaitUntilDone:(_Bool)arg1;
- (void)save;
- (_Bool)contextContainsSpotlightUnindexedChatSessions:(id)arg1;
- (id)saveNonMainManagedObjectContext:(id)arg1;
- (_Bool)contextContainsUnindexedMessages:(id)arg1;
- (void)performAfterMOCCreated;
- (void)performAfterStoreDrop;
- (void)performBeforeStoreDrop;
- (void)performAfterStoreAdd;
- (void)performBeforeStoreAdd;
- (void)performAfterInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

