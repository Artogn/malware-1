//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Apr 19 2016 14:33:02).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AMPAudioControl, AMPCallParameter, AMPCallSession, AMPServiceParameter, AMPServiceSession, AMPSession, AMPUserInfo, AMPVideoControl, AMPVideoRenderView, NCLineCallDialing, NSDate, NSError, NSOperationQueue, NSString, UILocalNotification;
@protocol NCVoIPParticipant, NCVoIPSessionDelegate;

@interface NCVoIPSession : NSObject
{
    id <NCVoIPSessionDelegate> mDelegate;
    id mPushMessageTimestamp;
    NSString *mNotificationIdentifier;
    UILocalNotification *mLocalNotification;
    int mCallDirection;
    int mState;
    NSOperationQueue *mOperationQueue;
    AMPUserInfo *mUserInfo;
    AMPCallParameter *mCallParameter;
    AMPServiceParameter *mServiceParameter;
    AMPAudioControl *mAudioControl;
    AMPVideoControl *mVideoControl;
    id <NCVoIPParticipant> mParticipant;
    NSString *mTargetURI;
    NCLineCallDialing *mDialing;
    AMPSession *mSession;
    AMPCallSession *mCallSession;
    AMPServiceSession *mServiceSession;
    NSDate *mConnectedDate;
    NSError *mError;
    int mTermCode;
    _Bool mTermCodeValid;
    _Bool mAutomaticallyAcceptsIncomingCall;
    unsigned long long mBackgroundTaskID;
    _Bool mAppActive;
    _Bool mVideoVisible;
    _Bool _speakerModeUpdateQueued;
}

@property(nonatomic) _Bool speakerModeUpdateQueued; // @synthesize speakerModeUpdateQueued=_speakerModeUpdateQueued;
@property(nonatomic) _Bool automaticallyAcceptsIncomingCall; // @synthesize automaticallyAcceptsIncomingCall=mAutomaticallyAcceptsIncomingCall;
@property(readonly, nonatomic) AMPServiceSession *serviceSession; // @synthesize serviceSession=mServiceSession;
@property(readonly, nonatomic) AMPCallSession *callSession; // @synthesize callSession=mCallSession;
@property(readonly, nonatomic) AMPSession *session; // @synthesize session=mSession;
@property(copy, nonatomic) NCLineCallDialing *dialing; // @synthesize dialing=mDialing;
@property(copy, nonatomic) NSString *targetURI; // @synthesize targetURI=mTargetURI;
@property(retain, nonatomic) NSError *error; // @synthesize error=mError;
@property(copy, nonatomic) id <NCVoIPParticipant> participant; // @synthesize participant=mParticipant;
@property(retain, nonatomic) AMPVideoControl *videoControl; // @synthesize videoControl=mVideoControl;
@property(retain, nonatomic) AMPAudioControl *audioControl; // @synthesize audioControl=mAudioControl;
@property(retain, nonatomic) AMPServiceParameter *serviceParameter; // @synthesize serviceParameter=mServiceParameter;
@property(retain, nonatomic) AMPCallParameter *callParameter; // @synthesize callParameter=mCallParameter;
@property(retain, nonatomic) AMPUserInfo *userInfo; // @synthesize userInfo=mUserInfo;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=mOperationQueue;
@property(readonly, nonatomic) int state; // @synthesize state=mState;
@property(readonly, nonatomic) int callDirection; // @synthesize callDirection=mCallDirection;
@property(retain, nonatomic) UILocalNotification *localNotification; // @synthesize localNotification=mLocalNotification;
@property(copy, nonatomic) NSString *notificationIdentifier; // @synthesize notificationIdentifier=mNotificationIdentifier;
@property(copy, nonatomic) id pushMessageTimestamp; // @synthesize pushMessageTimestamp=mPushMessageTimestamp;
@property(nonatomic) id <NCVoIPSessionDelegate> delegate; // @synthesize delegate=mDelegate;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)didReceiveAMPReport:(id)arg1;
- (void)audioControlDidFail:(id)arg1;
- (void)session:(id)arg1 didUpdateParticipant:(id)arg2;
- (void)session:(id)arg1 didDeleteParticipant:(id)arg2;
- (void)session:(id)arg1 didInsertParticipant:(id)arg2;
- (void)session:(id)arg1 didChangeRemoteParticipantVideoInterruptState:(_Bool)arg2;
- (void)session:(id)arg1 didChangeRemoteParticipantVideoPauseState:(_Bool)arg2;
- (void)sessionDidReceiveFirstRemoteParticipantVideoFrame:(id)arg1;
- (void)sessionDidChangeRegistrar:(id)arg1;
- (void)sessionDidDetectServerConnectionUnstable:(id)arg1;
- (void)session:(id)arg1 didChangeServiceState:(id)arg2;
- (void)session:(id)arg1 didChangeMediaState:(id)arg2;
- (void)session:(id)arg1 didChangeCallState:(id)arg2;
- (_Bool)session:(id)arg1 shouldPlayToneWithToneType:(id)arg2;
- (void)session:(id)arg1 errorDidOccur:(id)arg2;
- (unsigned int)participantAudioLevel:(id)arg1;
- (int)participantState:(id)arg1;
- (void)toggleCameraDevice;
@property(readonly, nonatomic) NSString *videoStatistics;
@property(readonly, nonatomic) int videoQuality;
@property(readonly, nonatomic, getter=isRemoteCameraInterrupted) _Bool remoteCameraInterrupted;
@property(readonly, nonatomic, getter=isRemoteCameraPaused) _Bool remoteCameraPaused;
@property(readonly, nonatomic, getter=isCaptureCameraInterrupted) _Bool captureCameraInterrupted;
@property(nonatomic, getter=isCaptureCameraPaused) _Bool captureCameraPaused;
@property(retain, nonatomic) AMPVideoRenderView *recvVideoRenderView;
@property(retain, nonatomic) AMPVideoRenderView *sendVideoRenderView;
@property(nonatomic, getter=isVideoVisible) _Bool videoVisible;
@property(nonatomic) long long sendVideoRenderOrientation;
@property(nonatomic) long long sendVideoCameraOrientation;
- (_Bool)stopVideo:(id *)arg1;
//- (void)startVideoWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *voiceStatistics;
@property(readonly, nonatomic) int voiceQuality;
- (void)mixWavFileAtPath:(id)arg1 repeat:(int)arg2;
- (void)sendDTMF:(id)arg1;
@property(nonatomic, getter=isSpeakerMode) _Bool speakerMode;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted;
//- (void)disconnectWithReason:(int)arg1 completion:(CDUnknownBlockType)arg2;
//- (void)disconnectWithCompletion:(CDUnknownBlockType)arg1;
- (void)logUIDisconnect;
//- (void)acceptCallWithVideo:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) int quality;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) _Bool hasVideoMedia;
- (_Bool)makeConferenceCallWithAccount:(id)arg1 participant:(id)arg2 error:(id *)arg3;
- (_Bool)respondCallWithUserInfo:(id)arg1 participant:(id)arg2 parameter:(id)arg3 error:(id *)arg4;
- (_Bool)makeGroupCallWithAccount:(id)arg1 participant:(id)arg2 error:(id *)arg3;
- (_Bool)makeLinePaidCallWithAccount:(id)arg1 participant:(id)arg2 error:(id *)arg3;
- (_Bool)makeLineFreeCallWithAccount:(id)arg1 participant:(id)arg2 isVideo:(_Bool)arg3 error:(id *)arg4;
- (_Bool)makeGilroundCallWithAccount:(id)arg1 participant:(id)arg2 mode:(long long)arg3 isVideo:(_Bool)arg4 isFake:(_Bool)arg5 error:(id *)arg6;
- (_Bool)executeOperationsForGilroundMakeCallWithAccount:(id)arg1 mode:(long long)arg2 error:(id *)arg3;
- (void)executeOperations:(id)arg1;
- (id)operationForRespondCall;
- (id)operationForMakeCall;
- (id)operationForConferenceConnectService;
- (id)operationForConferenceJoinRoom;
- (id)operationForLineAcquirePaidCallRoute;
- (id)operationForLineAcquirePaidCallCallerIDStatus;
- (id)operationForLineAcquireFreeCallRoute;
- (id)operationForGilroundGetCallTokenWithAccount:(id)arg1 external:(_Bool)arg2 type:(id)arg3;
- (id)operationForGilroundRegisterWithAccount:(id)arg1 mode:(id)arg2;
- (id)operationForActivate;
- (id)operationForRequestVideoCapturePermission;
- (id)operationForRequestAudioCapturePermission;
- (id)operationForSearchParticipantContact;
- (id)operationForRequestParticipantProfile;
- (void)operation:(id)arg1 errorDidOccur:(id)arg2;
- (void)changeState:(int)arg1;
- (void)delegateBPInfoDidUpdate;
- (void)delegateTransportInfoDidUpdate;
- (void)delegateDidChangeRegistrar;
- (void)delegateServerConnectionUnstable;
- (void)delegateAudioOutputRouteChange;
- (void)delegateDidChangeParticipantStateWithParticipantID:(id)arg1 state:(int)arg2;
- (void)delegateDidChangeRemoteParticipantVideoState;
- (void)delegateDidReceiveFirstRemoteParticipantVideoFrame;
- (void)delegateDidStopVideoWithTermCode:(int)arg1;
- (void)delegateWillStopVideoWithTermCode:(int)arg1;
- (void)delegateDidStartVideo;
- (void)delegateWillStartVideo;
- (void)delegateDisconnect;
- (void)delegateConnect;
- (void)delegateError:(id)arg1;
- (void)delegateReleased;
- (void)delegateStateChange:(int)arg1;
- (void)setupUserInfo:(id)arg1 withServiceInfo:(id)arg2;
- (void)setupUserInfo:(id)arg1 withRouteInfo:(id)arg2;
- (void)detachAndEndBackgroundTaskAfterDelay:(double)arg1;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)setSession:(id)arg1;
- (void)dealloc;
- (id)init;

@end

