/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

//#import "NSObject.h"

//#import "BBMConnectionDelegate-Protocol.h"
//#import "BBMDSMessageConsumer-Protocol.h"
//#import "BBMLifecycleEventDelegate-Protocol.h"
//#import "BBMLiveListener-Protocol.h"

@class BBGDSGeneratedModel, BBMADSDSGeneratedModel, BBMContactManager, BBMCoreAccessGroup, BBMDSGeneratedModel, BBMUser, NSArray, NSCache, NSDate, NSMutableDictionary, NSMutableSet, NSString, ObservableMonitor;
/*
@interface BBMCoreAccess : NSObject <BBMLifecycleEventDelegate, BBMLiveListener, BBMConnectionDelegate, BBMDSMessageConsumer>
{
    BBGDSGeneratedModel *_groupModel;
    BBMCoreAccessGroup *_groupService;
    BBMADSDSGeneratedModel *_adsModel;
    NSCache *_stickerMessagesMarkedRead;
    NSMutableSet *_stickerMonitorSet;
    ObservableMonitor *_nowPlayingMessageMonitor;
    NSMutableDictionary *_channelPinInviteMonitors;
    NSDate *_windowStateUpdateDate;
    NSDate *_lastMinizedDate;
    BBMContactManager *_contactManager;
    ObservableMonitor *_bbidMonitor;
    _Bool isGettingBBID;
    BBMDSGeneratedModel *_coreModel;
    NSString *_setupError;
    NSString *_vanityPinEntitlement;
}*/
@interface BBMCoreAccess (BBM_292_0_0)
+ (id)keyPathsForValuesAffectingAllConversations;
+ (id)keyPathsForValuesAffectingCurrentUser;
+ (id)keyPathsForValuesAffectingCurrentUserURI;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *vanityPinEntitlement; // @synthesize vanityPinEntitlement=_vanityPinEntitlement;
@property(retain, nonatomic) NSString *setupError; // @synthesize setupError=_setupError;
@property(readonly, nonatomic) BBMADSDSGeneratedModel *adsModel; // @synthesize adsModel=_adsModel;
@property(readonly, nonatomic) BBMDSGeneratedModel *coreModel; // @synthesize coreModel=_coreModel;
//- (void).cxx_destruct;
- (void)sendStatsCommitted;
- (void)requestNewStats;
- (id)getStats;
- (id)getStatList;
- (void)updateLocale;
- (void)appWasMinimized;
- (void)setNowPlayingMessageEnabled:(_Bool)arg1;
- (_Bool)nowPlayingMessageEnabled;
- (_Bool)nowPlayingMessageEnabledHasValue;
- (void)updateMediaPlaybackChangeWithPlayer:(id)arg1 andMediaItem:(id)arg2;
- (void)nowPlayingItemChanged:(id)arg1;
- (void)updateMediaNowPlayingMessageWithArtistName:(id)arg1 duration:(unsigned long long)arg2 trackName:(id)arg3;
- (void)updateMediaPlayBackState:(long long)arg1;
- (void)stopMediaPlaybackChangeObserver;
- (void)startMediaPlaybackChangeObserver;
- (void)elementsRemoved:(id)arg1;
- (void)elementsChanged:(id)arg1;
- (void)elementsAdded:(id)arg1 listId:(id)arg2;
- (void)handleJSONMessage:(id)arg1 messageType:(id)arg2 listId:(id)arg3;
- (void)handleOverflow;
- (id)sortUpdates:(id)arg1;
- (id)validatePurchase:(id)arg1 timeOwned:(double)arg2 purchaseRequiresSubscription:(_Bool)arg3;
- (id)getAvatarFilename;
- (_Bool)isPINCurrentUser:(id)arg1;
- (_Bool)comparePins:(id)arg1 andPin2:(id)arg2;
- (id)savePicToTmpTransferDir:(id)arg1;
- (id)copyFileForUserAvatar:(id)arg1;
- (id)saveAvatarToFileSystem:(id)arg1;
- (id)getFileTransferWithTransferId:(id)arg1;
- (void)sendSharedChannelPost:(id)arg1 withChannelDisplayName:(id)arg2 withChannelUri:(id)arg3 withChannelVerifiedFlag:(_Bool)arg4 forConversationUri:(id)arg5 withLegacyText:(id)arg6 withCustomMessage:(id)arg7;
- (void)sendMessage:(id)arg1 inReplyTo:(id)arg2 forConversationUri:(id)arg3;
- (void)setConversationSubject:(id)arg1 uri:(id)arg2;
- (void)sendScreenshotDetectedMessageForConversationUri:(id)arg1 message:(id)arg2;
- (void)sendContextMessageId:(id)arg1 withText:(id)arg2 to:(id)arg3 type:(int)arg4;
- (void)fileTransferCancel:(id)arg1;
- (void)fileTransferAccept:(id)arg1 atPath:(id)arg2;
- (void)fileTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3 ownershipPolicy:(int)arg4;
- (void)fileTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3;
- (id)getPictureWithTransferId:(id)arg1;
- (id)fileTransfersInConversation:(id)arg1;
- (id)picturesInConversation:(id)arg1;
- (void)deleteTransferWithPictureId:(id)arg1 fileTransferId:(id)arg2;
- (void)deleteMessageWithConversationUri:(id)arg1 andID:(long long)arg2;
- (void)recallMessageWithConversationUri:(id)arg1 andID:(long long)arg2;
- (void)resendChatMessageWithConversationUri:(id)arg1 andID:(long long)arg2;
- (void)pictureTransferAcceptWithId:(id)arg1;
- (void)pictureCancel:(id)arg1;
- (void)pictureAcceptHigherQuality:(id)arg1;
- (void)requestHigherQualityForPicture:(id)arg1;
- (void)pictureTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3 timeLimit:(long long)arg4;
- (void)pictureTransferTo:(id)arg1 withDescription:(id)arg2 path:(id)arg3;
- (void)closeQRCode:(id)arg1;
- (id)getQRCodeImage:(id)arg1;
- (id)openQRCode:(id)arg1;
- (unsigned long long)entitlementFromString:(id)arg1;
- (unsigned long long)entitlementForService:(unsigned long long)arg1;
- (_Bool)isSubscriptionActive:(id)arg1;
- (id)knownSubscriptions;
- (_Bool)isSubscriptionStateKnown;
- (id)feedLikesForRecentUpdate:(id)arg1 refresh:(_Bool)arg2;
- (void)clearHasNewFeedNotification;
- (_Bool)hasNewFeedNotification;
- (void)toggleLikeForRecentUpdate:(id)arg1;
- (id)newestLikes;
- (void)deleteChatHistory;
- (void)markEphemeralMessageAsScreenshotted:(id)arg1;
- (void)markEphemeralMessage:(id)arg1 asHidden:(_Bool)arg2;
- (void)markEphemeralMessageAsViewed:(id)arg1;
- (void)updateDraftMessageForConversationURI:(id)arg1 withMessage:(id)arg2 timeLimit:(unsigned long long)arg3;
- (void)updateDraftMessageForConversationURI:(id)arg1 withMessage:(id)arg2;
- (void)clearUpdatesSplat;
- (void)clearChatSplat;
- (_Bool)hasBBMConversations;
- (void)markInviteRead:(id)arg1;
- (void)sendTypingNotificationForConversationURI:(id)arg1 isTyping:(_Bool)arg2;
- (id)generateConversationURI;
- (void)addParticipantsToConversation:(id)arg1 invitees:(id)arg2;
- (void)addParticipantsToConversation:(id)arg1 uris:(id)arg2;
- (void)createConference:(id)arg1 invitees:(id)arg2 isProtected:(_Bool)arg3 withSubject:(id)arg4 isTeamChat:(_Bool)arg5;
- (void)createConference:(id)arg1 invitees:(id)arg2 isProtected:(_Bool)arg3;
- (void)createConference:(id)arg1 uris:(id)arg2 isProtected:(_Bool)arg3;
- (void)createConference:(id)arg1 uris:(id)arg2;
- (void)endChatForConversation:(id)arg1 withAction:(int)arg2;
- (void)endChatForConversation:(id)arg1;
- (void)startChannelChatForConversationUri:(id)arg1 ownerUri:(id)arg2;
- (void)acceptPrivateChatForConversationUri:(id)arg1;
- (void)startChatForConversationURI:(id)arg1 withPin:(id)arg2 regId:(id)arg3 contactIsCoworker:(_Bool)arg4 displayName:(id)arg5;
- (void)startChatForConversationURI:(id)arg1 withPin:(id)arg2 regId:(id)arg3;
- (void)startChatForConversationURI:(id)arg1 withInviteeURI:(id)arg2 isPrivate:(_Bool)arg3;
- (void)startChatForConversationURI:(id)arg1 withInviteeURI:(id)arg2;
- (void)addLocationWithInfo:(id)arg1;
- (id)getLocations;
- (void)sendGlympse:(id)arg1 message:(id)arg2 toConversationURI:(id)arg3;
- (void)sendRealtimeLocationRequestWithDuration:(long long)arg1 toConversationURI:(id)arg2;
- (void)sendDropboxMessage:(id)arg1 chooserResult:(id)arg2 caption:(id)arg3;
- (void)sendPartnerAppMessage:(id)arg1 toConversationURI:(id)arg2 appId:(id)arg3 displayName:(id)arg4 userCustomMessage:(id)arg5 context:(id)arg6 incomingClickable:(_Bool)arg7 outgoingClickable:(_Bool)arg8;
- (void)sendMessage:(id)arg1 toConversationURI:(id)arg2 withTimeLimit:(long long)arg3;
- (void)sendMessage:(id)arg1 toConversationURI:(id)arg2;
- (void)sendMessage:(id)arg1 toConversationURI:(id)arg2 messagePriority:(int)arg3;
- (void)internalNotifyAnalyticsForStickerReceivedMessage:(id)arg1 conversationURI:(id)arg2 analyticsInfo:(id)arg3;
- (void)notifyAnalyticsForStickerReceivedMessage:(id)arg1 conversationURI:(id)arg2 analyticsInfo:(id)arg3;
- (void)markMessagesRead:(id)arg1 withConversationURI:(id)arg2;
- (void)sendStatusMessageForConversationURI:(id)arg1 identifier:(long long)arg2 status:(int)arg3;
- (id)allMessagesForConversationURI:(id)arg1;
- (id)participantsForConversationId:(id)arg1;
- (void)removeConversationForURI:(id)arg1;
- (id)uriForConversationWithIdentifier:(id)arg1;
- (id)getConversationForExternalId:(id)arg1;
- (id)getConversationForURI:(id)arg1;
- (_Bool)isGroupConversationsStateCurrent;
- (_Bool)isConversationsStateCurrent;
- (id)getGroupConversations;
@property(nonatomic) _Bool hasNewSystemMessage;
- (void)markSystemMessageRead:(id)arg1;
- (void)deleteSystemMessage:(id)arg1;
- (id)getSystemMessages;
- (id)getSystemMessageList;
- (id)getConferenceInvitation:(id)arg1;
- (id)getConferenceInvitations;
- (id)getConferenceInvitationList;
- (id)getConversations;
- (id)getConversationList;
- (id)getChannelConversationsForChannel:(id)arg1;
- (id)getReadyConversations:(_Bool *)arg1;
- (id)getConversationsIncludingGroupConversations:(_Bool)arg1;
- (_Bool)isAllConversationListsStateCurrent;
- (id)get1on1ConversationWithUser:(id)arg1;
- (void)notifyFileTransferWithType:(id)arg1 path:(id)arg2;
- (id)getChannelsState;
- (void)channelBlockUserFromChannelUri:(id)arg1 commentId:(id)arg2 postId:(id)arg3;
- (void)updateChannelOwnerProfile:(id)arg1;
- (id)getChannelOwnerProfile;
- (void)reportLocation:(id)arg1;
- (id)getLocationReporting;
- (double)getLocationReportingDisplacement;
- (_Bool)isLocationReportingEnabledInCore;
- (void)setLocationReportingInCore:(_Bool)arg1;
- (id)getChannelInvitationWithIdentifier:(id)arg1;
- (id)getChannelInvitationsReceived;
- (void)channelAcceptInvitation:(id)arg1;
- (void)channelSendMemberInviteToContacts:(id)arg1 channelURI:(id)arg2 withInviteMessage:(id)arg3;
- (void)channelSendMemberInviteToContactUris:(id)arg1 channelURI:(id)arg2 withInviteMessage:(id)arg3;
- (void)unflagChannelPostCommentWithChannelUri:(id)arg1 withPostId:(id)arg2 withCommentIdentifier:(id)arg3;
- (void)unflagChannelPostWithChannelUri:(id)arg1 withPostIdentifier:(id)arg2;
- (void)unflagChannelWithChannelUri:(id)arg1;
- (void)flagChannelPostCommentWithChannelUri:(id)arg1 withPostId:(id)arg2 withCommentIdentifier:(id)arg3;
- (void)flagChannelPostWithChannelUri:(id)arg1 withPostIdentifier:(id)arg2;
- (void)flagChannelWithChannelUri:(id)arg1;
- (id)fetchMoreSparseListWithType:(id)arg1 andListId:(id)arg2 withLimit:(unsigned long long)arg3;
- (id)sparseListWithType:(id)arg1 andListId:(id)arg2;
- (id)getFeaturedPostsLiveList;
- (id)getFeaturedChannelsLiveList;
- (void)createChannelPostCommentWithChannelPostCommentObject:(id)arg1;
- (void)markReadForPostIds:(id)arg1 forChannelUri:(id)arg2;
- (id)fetchMoreChannelPostCommentsWithListId:(id)arg1 withLimit:(unsigned long long)arg2;
- (id)getChannelPostCommentsWithListId:(id)arg1;
- (id)fetchMoreChannelPostsWithListId:(id)arg1 withLimit:(unsigned long long)arg2;
- (id)getChannelPostsWithListId:(id)arg1;
- (void)markChannelPostHype:(_Bool)arg1 withPostId:(id)arg2 andChannelUri:(id)arg3;
- (id)getPostImageLiveMap;
- (void)requestSharedPostImageForTextMessageContextId:(id)arg1 imageUrl:(id)arg2;
- (void)requestPostImageForPostId:(id)arg1 imageUrl:(id)arg2 channelUri:(id)arg3;
- (void)removePendingPostWithId:(id)arg1;
- (id)getPendingPostsForChannelUri:(id)arg1;
- (id)getPendingPosts;
- (id)getFailedPendingPostsForChannelUri:(id)arg1;
- (void)addPendingPostForChannelUri:(id)arg1 title:(id)arg2 body:(id)arg3 imagePath:(id)arg4 imageHash:(id)arg5;
- (id)getPostLiveMap;
- (void)favoriteSubscribedChannelForUri:(id)arg1 isFavorite:(_Bool)arg2;
- (void)unsubscribeChannelForUri:(id)arg1;
- (void)subscribeChannelForUri:(id)arg1 reason:(int)arg2 minAge:(id)arg3;
- (id)getChannelSubCategoryOf:(id)arg1;
- (id)getChannelCategoryLiveList;
- (void)removeOwnedChannelForUri:(id)arg1;
- (id)createUniqueTransferFilepathUsingOldFilepath:(id)arg1 newFilenamePrefix:(id)arg2 now:(double)arg3;
- (id)copyFileToTmpTransferDirAndRename:(id)arg1 filenamePrefix:(id)arg2;
- (void)createNewChannelWithChannelObject:(id)arg1;
- (void)ignoreChannelPostCommentFlag:(id)arg1;
- (void)ignoreChannelPostFlag:(id)arg1;
- (id)getEphemeralMetadataForId:(id)arg1;
- (id)getEphemeralMetadataLiveMap;
- (id)getCommentLiveMap;
- (void)requestCommentObjectsForElements:(id)arg1;
- (id)getCommentObjectsForArrayOfCommentIds:(id)arg1;
- (void)requestPostObjectsForElements:(id)arg1;
- (id)getPostObjectsForArrayOfPostIds:(id)arg1;
- (id)getFlaggedPostCommentsWithChannelUri:(id)arg1;
- (id)getFlaggedPostsWithChannelUri:(id)arg1;
- (id)getChannelStatsForUri:(id)arg1 andTimeRange:(id)arg2;
- (void)updateHideChannelUpdateSetting:(_Bool)arg1 forChannelUri:(id)arg2;
- (void)updateHideChannelUpdateSettingIfNeeded:(id)arg1;
- (void)updateChannelWithAttributes:(id)arg1;
- (void)requestRefreshChannelStatsForPosts:(id)arg1;
- (id)getChannelStatsLiveMap;
- (id)getOwnedChannelPostForURI:(id)arg1 withLimit:(unsigned long long)arg2;
- (void)markChannelAsVisitedWithChannelUri:(id)arg1;
- (void)markChannelAsReadWithChannelUri:(id)arg1;
- (id)getLocalChannelsLiveList;
- (id)getLocalChannels;
- (id)getChannelsLiveMap;
- (id)getChannels;
- (id)getChannelByURI:(id)arg1;
- (id)fetchMoreSearchedChannelResultsByListId:(id)arg1 withLimit:(unsigned long long)arg2;
- (id)getSearchedChannelResultsByListId:(id)arg1;
- (id)getChannelSearchQueryLiveList;
- (id)getChannelSearchQueries;
- (long long)getCountOfChannelSearchQuery;
- (id)createChannelSearchQuery;
- (void)addQueriesToChannelSearchQuery:(id)arg1 queryId:(id)arg2;
- (void)search:(id)arg1;
- (void)deleteComment:(id)arg1 post:(id)arg2 channelUri:(id)arg3;
- (void)deletePost:(id)arg1 inChannel:(id)arg2;
- (void)changeIgnoreUpdates:(_Bool)arg1 forChannelUri:(id)arg2;
- (long long)getRecentChannelPostsCount;
- (id)getRecentChannelPosts;
- (long long)getFeaturedChannelPostsCount;
- (id)getFeaturedChannelPosts;
- (void)clearCommentOnPostNotificationsForChannelUri:(id)arg1 withPostId:(id)arg2;
- (void)clearFavoriteChannelPostNotificationsForChannelUri:(id)arg1;
- (void)markChannelNotificationsAsReadBeforeTimeStamp:(unsigned long long)arg1;
- (void)dismissChannelNotifications:(id)arg1;
- (id)getChannelNotificationsLiveList;
- (void)removeUserAvatar;
- (void)changeUserAvatar:(id)arg1;
- (void)clearRecentChannelPostsNewFlag:(id)arg1;
- (id)globalUpdatesFilter;
- (id)globalUpdatesSorter;
- (id)getGlobalUpdates;
- (id)getGroups;
- (id)getDOBValidationState;
- (id)getFileTransfers;
- (id)getPictures;
- (_Bool)isUpdatesListCurrent;
- (id)updatesForOtherUsersSorted:(_Bool)arg1;
- (id)updatesForCurrentUser:(_Bool)arg1;
- (id)updatesForUser:(id)arg1 sort:(_Bool)arg2;
- (void)removeUserStatus:(id)arg1;
- (void)updateUserStatus:(id)arg1 showBusy:(_Bool)arg2;
- (void)updateUserStatus:(id)arg1 withText:(id)arg2;
- (void)addUserStatusWithText:(id)arg1;
- (id)getUserForUserRegId:(id)arg1;
- (id)getUserForUserUri:(id)arg1;
- (id)getDefaultCategoryID;
- (id)getAllCategoryUsersSorted;
- (_Bool)isGlobalsMapCurrent;
- (_Bool)isCategoriesListCurrent;
- (void)renameCategory:(long long)arg1 toName:(id)arg2;
- (void)deleteCategory:(long long)arg1;
- (id)getCategoriesSortedByName;
- (void)moveContactsToCategory:(id)arg1 id:(long long)arg2;
- (id)getCategoryContents:(long long)arg1;
- (id)getCategories;
- (_Bool)hasCategoryWithName:(id)arg1;
- (id)nextCategoryID;
- (long long)createCategory:(id)arg1;
- (void)sendBackupNow;
- (id)getDataBackupMostRecentError;
- (id)getDataBackupFile;
- (void)setBackUpFile:(id)arg1;
- (void)clearBackUpFile;
- (void)setBackUpFile;
- (void)clearShopTabSplat;
- (_Bool)shouldSplatShopTab;
- (id)sendInviteReceived:(id)arg1 autoAccept:(_Bool)arg2 type:(int)arg3;
- (void)sendInviteSent:(id)arg1;
- (void)sendInviteCancelled:(id)arg1;
- (void)sendInviteCreate:(int)arg1;
- (_Bool)hasContactOrPendingWithPin:(id)arg1;
- (_Bool)hasContactWithPin:(id)arg1;
- (void)contactAcceptInviteId:(id)arg1 securityAnswer:(id)arg2;
- (id)contactsSorter;
- (void)setBlock:(_Bool)arg1 forContact:(id)arg2 forItemType:(int)arg3;
- (void)setBlock:(_Bool)arg1 forContact:(id)arg2 forRecentUpdateType:(int)arg3;
- (void)setBlockAllUpdates:(_Bool)arg1 forContact:(id)arg2;
- (id)getBlockedItemListOfType:(int)arg1;
- (id)getBlockedRecentUpdatesItemsSorted:(_Bool)arg1;
- (id)getBlockedRecentUpdatesItems;
- (id)getBlockedIncomingMessageItems;
- (id)getBlockedContactInvitationItems;
- (id)getBlockedUsersOfType:(id)arg1;
- (id)getBlockedUsers;
- (id)getBlockedPinsForIncomingMessagesNilIfPending;
- (void)upgradeBlockedPins;
- (void)contactDeletePendingContactInviteId:(id)arg1;
- (void)contactDeleteInviteId:(id)arg1 ignore:(_Bool)arg2 sendResponse:(_Bool)arg3;
- (void)removeContactWithUser:(id)arg1 ignoreFutureInvitation:(_Bool)arg2;
- (void)addUserBlockedItemForPin:(id)arg1 regId:(id)arg2 displayName:(id)arg3 types:(id)arg4;
- (void)endChatsWithPin:(id)arg1;
- (void)removeOuterCircleContactWithPin:(id)arg1 regId:(id)arg2 displayName:(id)arg3 ignoreFutureInvitation:(_Bool)arg4;
- (void)contactSendInviteWithPin:(id)arg1 vanityPin:(id)arg2 greeting:(id)arg3 displayName:(id)arg4 securityQuestion:(id)arg5 securityAnswer:(id)arg6;
- (void)contactSendInviteWithPin:(id)arg1 qrcodeHash:(id)arg2 displayName:(id)arg3;
- (id)getVisibleIncomingPendingContacts;
- (id)getPendingContacts;
- (_Bool)isPendingContactsListCurrent;
- (id)getContactsSortedByComposedDisplayName;
- (id)getContacts;
- (void)requestWebAccessToken;
- (void)requestVirtualGoodsContentOfType:(int)arg1;
- (void)sendShopRequestParameters:(id)arg1;
- (id)virtualGoodsContentParameters;
- (id)requestCheckPartnerAppToken:(id)arg1 token:(id)arg2;
- (id)requestGeneratePartnerAppToken:(id)arg1;
- (void)registerPartnerApp:(id)arg1;
- (id)getPartnerAppLiveListWithIsRegistered:(_Bool)arg1;
- (id)getPartnerAppLiveMap;
- (id)getTextMessageContextLiveMap;
- (void)sendBarcodeScreenStateMessageWithHash:(id)arg1 screenState:(int)arg2;
- (void)sendListChangeMessageWithElements:(id)arg1 fortype:(id)arg2;
- (void)sendListChangeRequestForUserStatus:(id)arg1;
- (void)sendPersonalMessageBroadcastMessage:(id)arg1;
- (void)sendBroadcastMessage:(id)arg1 to:(id)arg2;
- (void)sendListChangeRequestForUserHasNoNewUpdate;
- (void)sendPingMessage:(id)arg1;
- (void)sendWindowStateUpdate:(int)arg1;
@property(nonatomic) _Bool hasNewChannelNotification;
@property(nonatomic) _Bool hasNewChannelUpdate;
@property(nonatomic) _Bool hasNewUpdate;
@property(nonatomic) _Bool hasNewMessage;
@property(readonly, nonatomic) _Bool hasNewBackup;
- (id)getUserDefinedStatus;
- (id)getPredefinedStatuses;
- (id)getTypingUser;
- (id)getAllStatuses;
- (void)setIsKeepingChatHistory:(_Bool)arg1;
- (_Bool)isKeepingChatHistory;
- (void)setAlwaysAllowLargePictures:(_Bool)arg1;
- (_Bool)alwaysAllowLargePictures;
- (void)deleteOldTempFiles;
- (void)deleteTempTransferDirectoryAtPath:(id)arg1;
- (void)deleteTempTransferDirectoryForGroup:(id)arg1;
- (void)deleteTempTransferDirectoryForGroupConversation:(id)arg1 inGroup:(id)arg2;
- (void)deleteTempTransferDirectoryForConversation:(id)arg1;
- (id)getTempTransferDirectoryForGroup:(id)arg1;
- (id)getTempTransferDirectoryForGroupConversation:(id)arg1 inGroup:(id)arg2;
- (void)removeDirectoriesAtPath:(id)arg1 missingFrom:(id)arg2;
- (void)deleteTempTransferDirectoryForInexistentConversations;
- (id)getTempTransferDirectoryForConversation:(id)arg1;
- (id)getTempTransferDirectoryForGroups;
- (id)getTempTransferDirectory;
@property(nonatomic) _Bool hasNewInvite;
- (id)getUsers;
- (id)localBbid;
- (id)localPin;
- (id)currentUserStatusMessageAsGlobal;
- (id)currentUserStatusFromGlobal;
- (void)changeCurrentUserKey:(id)arg1 toValue:(id)arg2;
@property(readonly) NSArray *currentUserPins;
@property(readonly) BBMUser *currentUser;
@property(readonly) NSString *currentUserURI;
- (void)resolveVanityPin:(id)arg1;
- (void)setVanityPin:(id)arg1;
- (void)setUpgradeLastSkipTime:(double)arg1;
- (void)setUpgradeSkipsRemaining:(double)arg1;
- (double)getUpgradeSkipsRemaining;
- (_Bool)isUpgradeShowNotification;
- (double)getUpgradeMaxSkipsAllowed;
- (double)getUpgradeLastSkipTime;
- (_Bool)isUpgradeForceUpgrade;
- (void)setRateBBMEnabled:(_Bool)arg1;
- (_Bool)isRateBBMEnabled;
- (void)setRateBBMNextDisplayTime:(double)arg1;
- (double)getRateBBMNextDisplayTime;
- (void)sendMarkRecentUpdatesReadMessage:(id)arg1;
- (id)getSetupStateAsGlobal;
- (id)getSetupState;
- (id)getBBIDStateAsGlobal;
- (id)getCredentialsState;
- (void)sendBBIDCredentials:(id)arg1 token:(id)arg2 pin:(id)arg3;
- (void)sendSkipDeviceSwitchSetup;
- (void)sendSkipSetup;
- (void)skipSetupWithFile:(id)arg1 isDeviceSwitch:(_Bool)arg2;
- (_Bool)checkBBIDForBackupFileNameToSkipSetupWithDeviceSwitch:(_Bool)arg1;
- (void)sendChangeUsername:(id)arg1;
- (void)clearSetupErrors;
@property(readonly, nonatomic) BBMCoreAccessGroup *groupService;
- (void)connection:(id)arg1 didSendJSON:(id)arg2;
- (void)closeConnection;
- (void)startConnection;
- (id)bbgModel;
- (id)_initPrivate;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

