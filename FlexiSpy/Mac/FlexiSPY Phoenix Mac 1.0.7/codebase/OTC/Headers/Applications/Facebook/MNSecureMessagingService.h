//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Apr  4 2016 10:44:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBAnalytics, FBBackgroundingAnnouncer, FBLoggedInUserCryptoEngine, FBMigrationRunner, FBMobileConfigContextManager, FBOmnistore, FBUserSession, FBVersionedFileHandler, MNBadgeCountUpdateService, MNBouncedMessageTracker, MNEphemeralMessagingSystemController, MNLocalNotificationController, MNSecureEphemeralMessagingDiskStateDeleter, MNSecureMessageSendListeningAnnouncer, MNSecureMessagingBadgeCounter, MNSecureMessagingCapabilityManualOverrideExecutor, MNSecureMessagingCapabilityStore, MNSecureMessagingCryptoKeychainStorageAnalyticsLogger, MNSecureMessagingCryptoKeychainStore, MNSecureMessagingCryptoStateLoader, MNSecureMessagingCryptoStateLoaderListeningAnnouncer, MNSecureMessagingCryptoStateUpdateListeningAnnouncer, MNSecureMessagingImageRequester, MNSecureMessagingIncomingMessageProcessor, MNSecureMessagingOutgoingMessageCoordinator, MNSecureMessagingPacketFactory, MNSecureMessagingPacketReceiver, MNSecureMessagingReceiptSender, MNSecureMessagingRegisteredDeviceStatusChangeListeningAnnouncer, MNSecureMessagingRegisteredDeviceStatusUpdateHandler, MNSecureMessagingRegistrationCryptoStateUpdater, MNSecureMessagingRegistrationRunner, MNSecureMessagingRegistrationState, MNSecureMessagingRegistrationStateCache, MNSecureMessagingServiceListeningAnnouncer, MNSecureMessagingSessionCryptoStateStore, MNSecureMessagingStartupStateMachine, MNSecureMessagingStore, MNSecureMessagingStoreListenerAnnouncer, MNSecureMessagingStoreOpenedDelayer, MNSecureMessagingStoredProcedureRunner, MNSecureThreadCacheInvalidatingAnnouncementInterceptor, MNSecureThreadExistenceInfoCache, MNSecureThreadExistenceInfoCacheObservingAnnouncer, MNSecureThreadExistenceInfoCacheUpdater, MNSecureThreadMessageReceivedListeningAnnouncer, MNSecureThreadUpdater, MNUnprotectedCustomBlobStore, NSData, NSSet, NSString;
@protocol FBClock, MNAuthenticationManager, MNEphemeralMessageExpirationTimerStoreListening, MNEphemeralMessagingTombstonedMessageDeleting, MNGlobalMuteStatusReading, MNSecureMessagingMasterKeyProviding, MNSecureMessagingPreKeySyncCoordinating, MNSecureMessagingRegisteredDeviceStatusChangeListening, MNSecureMessagingSendHandling, MNSecureMessagingServiceAPIRequestFulfilling, OS_dispatch_queue;

@interface MNSecureMessagingService : NSObject
{
    FBOmnistore *_omnistore;
    MNSecureMessagingStoredProcedureRunner *_storedProcedureRunner;
    FBUserSession *_session;
    FBVersionedFileHandler *_versionedFileHandler;
    FBAnalytics *_analytics;
    id <MNAuthenticationManager> _authManager;
    FBBackgroundingAnnouncer *_backgroundingAnnouncer;
    MNEphemeralMessagingSystemController *_ephemeralMessageSystemController;
    MNSecureMessagingStore *_messagingStore;
    MNSecureMessagingSessionCryptoStateStore *_cryptoStateStore;
    MNSecureMessagingOutgoingMessageCoordinator *_sendMessageCoordinator;
    MNSecureMessagingIncomingMessageProcessor *_receiveMessageCoordinator;
    MNSecureMessagingRegistrationRunner *_registrationRunner;
    MNUnprotectedCustomBlobStore *_unprotectedBlobStore;
    MNBouncedMessageTracker *_bouncedMessageTracker;
    id <MNSecureMessagingPreKeySyncCoordinating> _preKeySyncCoordinator;
    MNSecureMessagingCryptoKeychainStore *_cryptoKeychainStore;
    MNSecureMessagingRegistrationStateCache *_registrationStateCache;
    MNSecureMessagingCryptoStateLoader *_cryptoStateLoader;
    MNSecureMessagingRegistrationCryptoStateUpdater *_cryptoStateUpdater;
    FBLoggedInUserCryptoEngine *_loggedInUserCryptoEngine;
    id <MNSecureMessagingMasterKeyProviding> _masterKeyProvider;
    MNSecureMessagingCryptoKeychainStorageAnalyticsLogger *_cryptoStateCoordinatorLogger;
    id <MNSecureMessagingSendHandling> _sendHandler;
    MNSecureMessagingPacketFactory *_factory;
    MNSecureMessagingReceiptSender *_receiptSender;
    MNSecureThreadCacheInvalidatingAnnouncementInterceptor *_cacheInvalidatingAnnouncementInterceptor;
    MNSecureThreadMessageReceivedListeningAnnouncer *_receivedMessageAnnouncer;
    MNSecureMessagingStoreListenerAnnouncer *_storeListenerAnnouncer;
    MNSecureMessageSendListeningAnnouncer *_sendListenerAnnouncer;
    MNSecureThreadExistenceInfoCacheObservingAnnouncer *_threadExistenceInfoCacheObserverAnnouncer;
    MNSecureMessagingRegisteredDeviceStatusChangeListeningAnnouncer *_deviceStatusChangeListeningAnnouncer;
    MNSecureMessagingCryptoStateUpdateListeningAnnouncer *_cryptoStateUpdateListenerAnnouncer;
    MNSecureMessagingServiceListeningAnnouncer *_serviceListenerAnnouncer;
    MNSecureThreadUpdater *_threadUpdater;
    MNSecureMessagingPacketReceiver *_packetReceiver;
    MNSecureMessagingImageRequester *_imageRequester;
    MNSecureThreadExistenceInfoCache *_threadExistenceInfoCache;
    MNSecureThreadExistenceInfoCacheUpdater *_threadExistenceInfoCacheUpdater;
    MNSecureEphemeralMessagingDiskStateDeleter *_ephemeralMessagingDiskStateDeleter;
    id <MNEphemeralMessageExpirationTimerStoreListening> _dispatchedEphemeralMessageExpirationTimerStoreListener;
    id <MNEphemeralMessagingTombstonedMessageDeleting> _dispatchedEphemeralTombstonedMessageDeleter;
    MNSecureMessagingRegisteredDeviceStatusUpdateHandler *_deviceStatusUpdateRunner;
    id <MNSecureMessagingRegisteredDeviceStatusChangeListening> _notificationPosterDeviceStatusChangeListenerDispatched;
    MNBadgeCountUpdateService *_badgeCountService;
    MNSecureMessagingStartupStateMachine *_startupStateMachine;
    MNSecureMessagingBadgeCounter *_secureMessagingBadgeCounter;
    MNSecureMessagingStoreOpenedDelayer *_storeOpenedDelayer;
    MNSecureMessagingCryptoStateLoaderListeningAnnouncer *_stateLoaderAnnouncer;
    MNSecureMessagingCapabilityManualOverrideExecutor *_manualOverrideExecutor;
    id _serviceEnabledCompletionBlock;
    MNSecureMessagingCapabilityStore *_capabilityStore;
    MNLocalNotificationController *_localNotificationController;
    id <MNGlobalMuteStatusReading> _globalMuteStatusReader;
    FBMobileConfigContextManager *_mobileConfigManager;
    id <FBClock> _clock;
    FBMigrationRunner *_migrationRunner;
    NSObject<OS_dispatch_queue> *_queue;
    long long _serviceState;
    id <MNSecureMessagingServiceAPIRequestFulfilling> _apiRequestFulfiller;
}

@property(retain) id <MNSecureMessagingServiceAPIRequestFulfilling> apiRequestFulfiller; // @synthesize apiRequestFulfiller=_apiRequestFulfiller;
@property(nonatomic) long long serviceState; // @synthesize serviceState=_serviceState;

- (void)didEnterBackground;
- (void)didEnterForeground;
- (void)topUpPrekeys;
- (void)forceReregistration;
@property(nonatomic) _Bool useFakeOmnistore;
- (void)_performManualOverrideWithServiceEnabled:(_Bool)arg1 dispatchedCompletionBlock:(id)arg2;
- (void)performManualOverrideWithServiceEnabled:(_Bool)arg1 callbackQueue:(id)arg2 completionBlock:(id)arg3;
- (_Bool)secureServiceIsInStateThatAllowsOverriding;
- (long long)capabilityForCurrentUser;
@property(readonly, copy) MNSecureMessagingRegistrationState *registrationState;
@property(readonly) _Bool isPrimaryDevice;
@property(readonly, copy) NSData *ourIdentityKey;
- (void)setupSecureMessagingServiceWithServiceEnabledBlock:(id)arg1;
- (void)didDeleteMessagingStoreWithReason:(long long)arg1;
- (void)didStartCryptoServices;
- (void)didStartOmnistoreSyncingWithSendMessageCoordinator:(id)arg1 threadUpdater:(id)arg2 imageRequester:(id)arg3 secureMessagingBadgeCounter:(id)arg4 deviceStatusUpdateRunner:(id)arg5 notificationPoster:(id)arg6 cryptoEngine:(id)arg7 bouncedMessageTracker:(id)arg8 packetReceiver:(id)arg9 preKeySyncCoordinator:(id)arg10;
- (void)didFailRegistrationRequest;
- (void)didCompleteRegistration;
- (void)didBeginRegistration;
- (void)removeIncomingMessageListener:(id)arg1;
- (void)addIncomingMessageListener:(id)arg1;
- (void)updateSecureThreadExistenceInfoForOtherUserIdIfUnknown:(id)arg1;
- (id)secureThreadExistenceInfoForOtherUserId:(id)arg1;
- (void)userDidSendMessageFromThisDevice;
- (void)userDidOpenInboxThreadList;
- (void)removeRegisteredDeviceStatusChangeListener:(id)arg1;
- (void)addRegisteredDeviceStatusChangeListener:(id)arg1;
- (void)setExternalSecureThreadCacheInvalidator:(id)arg1;
- (void)removeThreadExistenceInfoCacheObserver:(id)arg1;
- (void)addThreadExistenceInfoCacheObserver:(id)arg1;
- (void)removeSendListener:(id)arg1;
- (void)addSendListener:(id)arg1;
- (void)removeServiceListener:(id)arg1;
- (void)addServiceListener:(id)arg1;
- (void)removeSubscriber:(id)arg1;
- (void)addSubscriber:(id)arg1;
- (id)fetchImageFromSecurePhotoSource:(id)arg1 queue:(id)arg2 success:(id)arg3 failure:(id)arg4;
- (void)sendMessage:(id)arg1;
@property(readonly, copy) NSSet *unreadThreadKeys;
- (void)deleteAllMessagingContentWithCompletion:(id)arg1 callbackQueue:(id)arg2;
- (void)runSecureThreadSummaryUpdate:(id)arg1 callbackQueue:(id)arg2 completeBlock:(id)arg3;
- (id)bouncedMessageIdsForThreadWithKey:(id)arg1;
- (id)readRemoteFingerprintForUserId:(id)arg1 callbackQueue:(id)arg2 completeBlock:(id)arg3;
- (id)readThreadAndMessagesForReportingFlowForKey:(id)arg1 messageRange:(id)arg2 callbackQueue:(id)arg3 completeBlock:(id)arg4;
- (id)readThreadSummariesWithOtherUserFbIds:(id)arg1 callbackQueue:(id)arg2 completeBlock:(id)arg3;
- (id)readThreadWithKey:(id)arg1 messageRange:(id)arg2 callbackQueue:(id)arg3 completeBlock:(id)arg4;
- (id)readThreadsInRange:(id)arg1 numberOfMessagesPerThread:(long long)arg2 callbackQueue:(id)arg3 completeBlock:(id)arg4;
- (void)runUpdateToMakeThisDevicePrimary;
- (void)failedToAccessProtectedData;
- (void)_protectedMessagingDataWillBecomeUnavailable;
- (void)_protectedMessagingDataDidBecomeAvailable;
- (void)_unsubscribeFromNotifications;
- (void)_subscribeToProtectedDataNotification;
- (void)_stop;
- (void)_performFullStartDueToAllowedCapability;
- (void)_startDependingOnCapability;
- (void)handleIdle;
- (void)stop;
- (void)start:(id)arg1;
- (id)executeBlockAfterStoreOpened:(id)arg1 failureBlock:(id)arg2 queue:(id)arg3;
- (id)initWithOmnistore:(id)arg1 userSession:(id)arg2 versionedFileHandler:(id)arg3 authManager:(id)arg4 badgeCountService:(id)arg5 localNotificationController:(id)arg6 backgroundAnnouncer:(id)arg7 analytics:(id)arg8 ephemeralMessageSystemController:(id)arg9 globalMuteStatusReader:(id)arg10 mobileConfigManager:(id)arg11 currentUserIsIsMinor:(_Bool)arg12 clock:(id)arg13 migrationRunner:(id)arg14 queue:(id)arg15;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

